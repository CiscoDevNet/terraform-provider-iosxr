// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceIosxrL2VPNXconnectGroupP2P(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxrL2VPNXconnectGroupP2PConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.iosxr_l2vpn_xconnect_group_p2p.test", "description", "My P2P Description"),
					resource.TestCheckResourceAttr("data.iosxr_l2vpn_xconnect_group_p2p.test", "interfaces.0.interface_name", "GigabitEthernet0/0/0/2"),
					resource.TestCheckResourceAttr("data.iosxr_l2vpn_xconnect_group_p2p.test", "evpn_segment_routing_service.0.vpn_id", "4600"),
					resource.TestCheckResourceAttr("data.iosxr_l2vpn_xconnect_group_p2p.test", "evpn_segment_routing_service.0.service_id", "600"),
					resource.TestCheckResourceAttr("data.iosxr_l2vpn_xconnect_group_p2p.test", "evpn_segment_routing_service.0.segment_routing_srv6_locator", "LOC11"),
				),
			},
		},
	})
}

const testAccDataSourceIosxrL2VPNXconnectGroupP2PConfig = `

resource "iosxr_l2vpn_xconnect_group_p2p" "test" {
	group_name = "P2P"
	p2p_xconnect_name = "XC"
	description = "My P2P Description"
	interfaces = [{
		interface_name = "GigabitEthernet0/0/0/2"
	}]
	evpn_segment_routing_service = [{
		vpn_id = 4600
		service_id = 600
		segment_routing_srv6_locator = "LOC11"
	}]
}

data "iosxr_l2vpn_xconnect_group_p2p" "test" {
	group_name = "P2P"
	p2p_xconnect_name = "XC"
	depends_on = [iosxr_l2vpn_xconnect_group_p2p.test]
}
`
