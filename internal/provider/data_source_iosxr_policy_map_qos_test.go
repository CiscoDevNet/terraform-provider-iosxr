// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceIosxrPolicyMapQoS(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "description", "My description"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.name", "class-default"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.type", "qos"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.set_mpls_experimental_topmost", "0"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.set_dscp", "0"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.queue_limits.0.value", "100"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxr_policy_map_qos.test", "classes.0.queue_limits.0.unit", "us"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxrPolicyMapQoSConfig(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
		},
	})
}

func testAccDataSourceIosxrPolicyMapQoSConfig() string {
	config := `resource "iosxr_policy_map_qos" "test" {` + "\n"
	config += `	policy_map_name = "PM1"` + "\n"
	config += `	description = "My description"` + "\n"
	config += `	classes = [{` + "\n"
	config += `		name = "class-default"` + "\n"
	config += `		type = "qos"` + "\n"
	config += `		set_mpls_experimental_topmost = 0` + "\n"
	config += `		set_dscp = "0"` + "\n"
	config += `		queue_limits = [{` + "\n"
	config += `			value = "100"` + "\n"
	config += `			unit = "us"` + "\n"
	config += `		}]` + "\n"
	config += `	}]` + "\n"
	config += `}` + "\n"

	config += `
		data "iosxr_policy_map_qos" "test" {
			policy_map_name = "PM1"
			depends_on = [iosxr_policy_map_qos.test]
		}
	`
	return config
}
