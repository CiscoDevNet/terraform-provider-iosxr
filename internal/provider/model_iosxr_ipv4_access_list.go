// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"
	"fmt"
	"reflect"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type IPv4AccessList struct {
	Device         types.String              `tfsdk:"device"`
	Id             types.String              `tfsdk:"id"`
	AccessListName types.String              `tfsdk:"access_list_name"`
	Sequences      []IPv4AccessListSequences `tfsdk:"sequences"`
}
type IPv4AccessListSequences struct {
	SequenceNumber                       types.Int64  `tfsdk:"sequence_number"`
	Remark                               types.String `tfsdk:"remark"`
	PermitProtocol                       types.String `tfsdk:"permit_protocol"`
	PermitEq                             types.String `tfsdk:"permit_eq"`
	PermitIgmpType                       types.String `tfsdk:"permit_igmp_type"`
	PermitPrecedence                     types.String `tfsdk:"permit_precedence"`
	PermitFragmentType                   types.String `tfsdk:"permit_fragment_type"`
	PermitFragments                      types.Bool   `tfsdk:"permit_fragments"`
	PermitCounter                        types.String `tfsdk:"permit_counter"`
	PermitDefault                        types.Bool   `tfsdk:"permit_default"`
	PermitCapture                        types.Bool   `tfsdk:"permit_capture"`
	PermitRangeStartProtocol             types.String `tfsdk:"permit_range_start_protocol"`
	PermitRangeEndProtocol               types.String `tfsdk:"permit_range_end_protocol"`
	PermitSourceAddress                  types.String `tfsdk:"permit_source_address"`
	PermitSourceWildcardMask             types.String `tfsdk:"permit_source_wildcard_mask"`
	PermitSourcePrefixLength             types.Int64  `tfsdk:"permit_source_prefix_length"`
	PermitSourceAny                      types.Bool   `tfsdk:"permit_source_any"`
	PermitSourceHost                     types.String `tfsdk:"permit_source_host"`
	PermitSourceNetGroup                 types.String `tfsdk:"permit_source_net_group"`
	PermitSourcePortGroup                types.String `tfsdk:"permit_source_port_group"`
	PermitSourcePortEq                   types.String `tfsdk:"permit_source_port_eq"`
	PermitSourcePortGt                   types.String `tfsdk:"permit_source_port_gt"`
	PermitSourcePortLt                   types.String `tfsdk:"permit_source_port_lt"`
	PermitSourcePortNeq                  types.String `tfsdk:"permit_source_port_neq"`
	PermitSourcePortRangeStartValue      types.String `tfsdk:"permit_source_port_range_start_value"`
	PermitSourcePortRangeEndValue        types.String `tfsdk:"permit_source_port_range_end_value"`
	PermitDestinationAddress             types.String `tfsdk:"permit_destination_address"`
	PermitDestinationWildcardMask        types.String `tfsdk:"permit_destination_wildcard_mask"`
	PermitDestinationPrefixLength        types.Int64  `tfsdk:"permit_destination_prefix_length"`
	PermitDestinationAny                 types.Bool   `tfsdk:"permit_destination_any"`
	PermitDestinationHost                types.String `tfsdk:"permit_destination_host"`
	PermitDestinationNetGroup            types.String `tfsdk:"permit_destination_net_group"`
	PermitDestinationPortGroup           types.String `tfsdk:"permit_destination_port_group"`
	PermitDestinationPortEq              types.String `tfsdk:"permit_destination_port_eq"`
	PermitDestinationPortGt              types.String `tfsdk:"permit_destination_port_gt"`
	PermitDestinationPortLt              types.String `tfsdk:"permit_destination_port_lt"`
	PermitDestinationPortNeq             types.String `tfsdk:"permit_destination_port_neq"`
	PermitDestinationPortRangeStartValue types.String `tfsdk:"permit_destination_port_range_start_value"`
	PermitDestinationPortRangeEndValue   types.String `tfsdk:"permit_destination_port_range_end_value"`
	PermitIcmpMessageTypeName            types.String `tfsdk:"permit_icmp_message_type_name"`
	PermitIcmpMessageType                types.Int64  `tfsdk:"permit_icmp_message_type"`
	PermitIcmpMessageCode                types.Int64  `tfsdk:"permit_icmp_message_code"`
	PermitDscpDscpValue                  types.String `tfsdk:"permit_dscp_dscp_value"`
	PermitDscpEq                         types.String `tfsdk:"permit_dscp_eq"`
	PermitDscpGt                         types.String `tfsdk:"permit_dscp_gt"`
	PermitDscpLt                         types.String `tfsdk:"permit_dscp_lt"`
	PermitDscpNeq                        types.String `tfsdk:"permit_dscp_neq"`
	PermitDscpRangeStartValue            types.String `tfsdk:"permit_dscp_range_start_value"`
	PermitDscpRangeEndValue              types.String `tfsdk:"permit_dscp_range_end_value"`
	PermitPacketLengthEq                 types.Int64  `tfsdk:"permit_packet_length_eq"`
	PermitPacketLengthGt                 types.Int64  `tfsdk:"permit_packet_length_gt"`
	PermitPacketLengthLt                 types.Int64  `tfsdk:"permit_packet_length_lt"`
	PermitPacketLengthNeq                types.Int64  `tfsdk:"permit_packet_length_neq"`
	PermitPacketLengthRangeStartValue    types.Int64  `tfsdk:"permit_packet_length_range_start_value"`
	PermitPacketLengthRangeEndValue      types.Int64  `tfsdk:"permit_packet_length_range_end_value"`
	PermitTtlEq                          types.Int64  `tfsdk:"permit_ttl_eq"`
	PermitTtlGt                          types.Int64  `tfsdk:"permit_ttl_gt"`
	PermitTtlLt                          types.Int64  `tfsdk:"permit_ttl_lt"`
	PermitTtlNeq                         types.Int64  `tfsdk:"permit_ttl_neq"`
	PermitTtlRangeStartValue             types.Int64  `tfsdk:"permit_ttl_range_start_value"`
	PermitTtlRangeEndValue               types.Int64  `tfsdk:"permit_ttl_range_end_value"`
	PermitFragmentOffsetEq               types.Int64  `tfsdk:"permit_fragment_offset_eq"`
	PermitFragmentOffsetGt               types.Int64  `tfsdk:"permit_fragment_offset_gt"`
	PermitFragmentOffsetLt               types.Int64  `tfsdk:"permit_fragment_offset_lt"`
	PermitFragmentOffsetNeq              types.Int64  `tfsdk:"permit_fragment_offset_neq"`
	PermitFragmentOffsetRangeStartValue  types.Int64  `tfsdk:"permit_fragment_offset_range_start_value"`
	PermitFragmentOffsetRangeEndValue    types.Int64  `tfsdk:"permit_fragment_offset_range_end_value"`
	PermitPoliceValue                    types.Int64  `tfsdk:"permit_police_value"`
	PermitPoliceUnit                     types.String `tfsdk:"permit_police_unit"`
	PermitPolicePeakRate                 types.Int64  `tfsdk:"permit_police_peak_rate"`
	PermitPolicePeakUnit                 types.String `tfsdk:"permit_police_peak_unit"`
	PermitPolicePriority                 types.String `tfsdk:"permit_police_priority"`
	PermitNexthop1Ipv4                   types.String `tfsdk:"permit_nexthop1_ipv4"`
	PermitNexthop1Track                  types.String `tfsdk:"permit_nexthop1_track"`
	PermitNexthop1Vrf                    types.String `tfsdk:"permit_nexthop1_vrf"`
	PermitNexthop2Ipv4                   types.String `tfsdk:"permit_nexthop2_ipv4"`
	PermitNexthop2Track                  types.String `tfsdk:"permit_nexthop2_track"`
	PermitNexthop2Vrf                    types.String `tfsdk:"permit_nexthop2_vrf"`
	PermitNexthop3Ipv4                   types.String `tfsdk:"permit_nexthop3_ipv4"`
	PermitNexthop3Track                  types.String `tfsdk:"permit_nexthop3_track"`
	PermitNexthop3Vrf                    types.String `tfsdk:"permit_nexthop3_vrf"`
	PermitLog                            types.Bool   `tfsdk:"permit_log"`
	PermitLogInput                       types.Bool   `tfsdk:"permit_log_input"`
	PermitSetQosGroup                    types.Int64  `tfsdk:"permit_set_qos_group"`
	PermitSetTtl                         types.Int64  `tfsdk:"permit_set_ttl"`
	DenyEq                               types.String `tfsdk:"deny_eq"`
	DenyProtocol                         types.String `tfsdk:"deny_protocol"`
	DenySourceAddress                    types.String `tfsdk:"deny_source_address"`
	DenySourceWildcardMask               types.String `tfsdk:"deny_source_wildcard_mask"`
	DenySourcePrefixLength               types.Int64  `tfsdk:"deny_source_prefix_length"`
	DenySourceAny                        types.Bool   `tfsdk:"deny_source_any"`
	DenySourceHost                       types.String `tfsdk:"deny_source_host"`
	DenySourceNetGroup                   types.String `tfsdk:"deny_source_net_group"`
	DenySourcePortGroup                  types.String `tfsdk:"deny_source_port_group"`
	DenySourcePortEq                     types.String `tfsdk:"deny_source_port_eq"`
	DenySourcePortGt                     types.String `tfsdk:"deny_source_port_gt"`
	DenySourcePortLt                     types.String `tfsdk:"deny_source_port_lt"`
	DenySourcePortNeq                    types.String `tfsdk:"deny_source_port_neq"`
	DenySourcePortRangeStartValue        types.String `tfsdk:"deny_source_port_range_start_value"`
	DenySourcePortRangeEndValue          types.String `tfsdk:"deny_source_port_range_end_value"`
	DenyDestinationAddress               types.String `tfsdk:"deny_destination_address"`
	DenyDestinationWildcardMask          types.String `tfsdk:"deny_destination_wildcard_mask"`
	DenyDestinationPrefixLength          types.Int64  `tfsdk:"deny_destination_prefix_length"`
	DenyDestinationAny                   types.Bool   `tfsdk:"deny_destination_any"`
	DenyDestinationHost                  types.String `tfsdk:"deny_destination_host"`
	DenyDestinationNetGroup              types.String `tfsdk:"deny_destination_net_group"`
	DenyDestinationPortGroup             types.String `tfsdk:"deny_destination_port_group"`
	DenyDestinationPortEq                types.String `tfsdk:"deny_destination_port_eq"`
	DenyDestinationPortGt                types.String `tfsdk:"deny_destination_port_gt"`
	DenyDestinationPortLt                types.String `tfsdk:"deny_destination_port_lt"`
	DenyDestinationPortNeq               types.String `tfsdk:"deny_destination_port_neq"`
	DenyDestinationPortRangeStartValue   types.String `tfsdk:"deny_destination_port_range_start_value"`
	DenyDestinationPortRangeEndValue     types.String `tfsdk:"deny_destination_port_range_end_value"`
	DenyIgmpType                         types.String `tfsdk:"deny_igmp_type"`
	DenyPrecedence                       types.String `tfsdk:"deny_precedence"`
	DenyFragmentType                     types.String `tfsdk:"deny_fragment_type"`
	DenyFragments                        types.Bool   `tfsdk:"deny_fragments"`
	DenyCounter                          types.String `tfsdk:"deny_counter"`
	DenyDefault                          types.Bool   `tfsdk:"deny_default"`
	DenyCapture                          types.Bool   `tfsdk:"deny_capture"`
	DenyIcmpOff                          types.Bool   `tfsdk:"deny_icmp_off"`
	DenyIcmpOn                           types.Bool   `tfsdk:"deny_icmp_on"`
	DenyRangeStartProtocol               types.String `tfsdk:"deny_range_start_protocol"`
	DenyRangeEndProtocol                 types.String `tfsdk:"deny_range_end_protocol"`
	DenyIcmpMessageTypeName              types.String `tfsdk:"deny_icmp_message_type_name"`
	DenyIcmpMessageType                  types.Int64  `tfsdk:"deny_icmp_message_type"`
	DenyIcmpMessageCode                  types.Int64  `tfsdk:"deny_icmp_message_code"`
	DenyDscpDscpValue                    types.String `tfsdk:"deny_dscp_dscp_value"`
	DenyDscpEq                           types.String `tfsdk:"deny_dscp_eq"`
	DenyDscpGt                           types.String `tfsdk:"deny_dscp_gt"`
	DenyDscpLt                           types.String `tfsdk:"deny_dscp_lt"`
	DenyDscpNeq                          types.String `tfsdk:"deny_dscp_neq"`
	DenyDscpRangeStartValue              types.String `tfsdk:"deny_dscp_range_start_value"`
	DenyDscpRangeEndValue                types.String `tfsdk:"deny_dscp_range_end_value"`
	DenyPacketLengthEq                   types.Int64  `tfsdk:"deny_packet_length_eq"`
	DenyPacketLengthGt                   types.Int64  `tfsdk:"deny_packet_length_gt"`
	DenyPacketLengthLt                   types.Int64  `tfsdk:"deny_packet_length_lt"`
	DenyPacketLengthNeq                  types.Int64  `tfsdk:"deny_packet_length_neq"`
	DenyPacketLengthRangeStartValue      types.Int64  `tfsdk:"deny_packet_length_range_start_value"`
	DenyPacketLengthRangeEndValue        types.Int64  `tfsdk:"deny_packet_length_range_end_value"`
	DenyTtlEq                            types.Int64  `tfsdk:"deny_ttl_eq"`
	DenyTtlGt                            types.Int64  `tfsdk:"deny_ttl_gt"`
	DenyTtlLt                            types.Int64  `tfsdk:"deny_ttl_lt"`
	DenyTtlNeq                           types.Int64  `tfsdk:"deny_ttl_neq"`
	DenyTtlRangeStartValue               types.Int64  `tfsdk:"deny_ttl_range_start_value"`
	DenyTtlRangeEndValue                 types.Int64  `tfsdk:"deny_ttl_range_end_value"`
	DenyFragmentOffsetEq                 types.Int64  `tfsdk:"deny_fragment_offset_eq"`
	DenyFragmentOffsetGt                 types.Int64  `tfsdk:"deny_fragment_offset_gt"`
	DenyFragmentOffsetLt                 types.Int64  `tfsdk:"deny_fragment_offset_lt"`
	DenyFragmentOffsetNeq                types.Int64  `tfsdk:"deny_fragment_offset_neq"`
	DenyFragmentOffsetRangeStartValue    types.Int64  `tfsdk:"deny_fragment_offset_range_start_value"`
	DenyFragmentOffsetRangeEndValue      types.Int64  `tfsdk:"deny_fragment_offset_range_end_value"`
	DenyPoliceValue                      types.Int64  `tfsdk:"deny_police_value"`
	DenyPoliceUnit                       types.String `tfsdk:"deny_police_unit"`
	DenyPolicePeakRate                   types.Int64  `tfsdk:"deny_police_peak_rate"`
	DenyPolicePeakUnit                   types.String `tfsdk:"deny_police_peak_unit"`
	DenyPolicePriority                   types.String `tfsdk:"deny_police_priority"`
	DenyNexthop1Ipv4                     types.String `tfsdk:"deny_nexthop1_ipv4"`
	DenyNexthop1Track                    types.String `tfsdk:"deny_nexthop1_track"`
	DenyNexthop1Vrf                      types.String `tfsdk:"deny_nexthop1_vrf"`
	DenyNexthop2Ipv4                     types.String `tfsdk:"deny_nexthop2_ipv4"`
	DenyNexthop2Track                    types.String `tfsdk:"deny_nexthop2_track"`
	DenyNexthop2Vrf                      types.String `tfsdk:"deny_nexthop2_vrf"`
	DenyNexthop3Ipv4                     types.String `tfsdk:"deny_nexthop3_ipv4"`
	DenyNexthop3Track                    types.String `tfsdk:"deny_nexthop3_track"`
	DenyNexthop3Vrf                      types.String `tfsdk:"deny_nexthop3_vrf"`
	DenyLog                              types.Bool   `tfsdk:"deny_log"`
	DenyLogInput                         types.Bool   `tfsdk:"deny_log_input"`
	DenySetQosGroup                      types.Int64  `tfsdk:"deny_set_qos_group"`
	DenySetTtl                           types.Int64  `tfsdk:"deny_set_ttl"`
}

func (data IPv4AccessList) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XR-um-ipv4-access-list-cfg:/ipv4/access-lists/access-list[access-list-name=%s]", data.AccessListName.ValueString())
}

func (data IPv4AccessList) toBody(ctx context.Context) string {
	body := "{}"
	if !data.AccessListName.IsNull() && !data.AccessListName.IsUnknown() {
		body, _ = sjson.Set(body, "access-list-name", data.AccessListName.ValueString())
	}
	if len(data.Sequences) > 0 {
		body, _ = sjson.Set(body, "sequences.sequence", []interface{}{})
		for index, item := range data.Sequences {
			if !item.SequenceNumber.IsNull() && !item.SequenceNumber.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"sequence-number", strconv.FormatInt(item.SequenceNumber.ValueInt64(), 10))
			}
			if !item.Remark.IsNull() && !item.Remark.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"remark", item.Remark.ValueString())
			}
			if !item.PermitProtocol.IsNull() && !item.PermitProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.protocol", item.PermitProtocol.ValueString())
			}
			if !item.PermitEq.IsNull() && !item.PermitEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.eq", item.PermitEq.ValueString())
			}
			if !item.PermitIgmpType.IsNull() && !item.PermitIgmpType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.igmp-type", item.PermitIgmpType.ValueString())
			}
			if !item.PermitPrecedence.IsNull() && !item.PermitPrecedence.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.precedence", item.PermitPrecedence.ValueString())
			}
			if !item.PermitFragmentType.IsNull() && !item.PermitFragmentType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-type", item.PermitFragmentType.ValueString())
			}
			if !item.PermitFragments.IsNull() && !item.PermitFragments.IsUnknown() {
				if item.PermitFragments.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragments", map[string]string{})
				}
			}
			if !item.PermitCounter.IsNull() && !item.PermitCounter.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.counter", item.PermitCounter.ValueString())
			}
			if !item.PermitDefault.IsNull() && !item.PermitDefault.IsUnknown() {
				if item.PermitDefault.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.default", map[string]string{})
				}
			}
			if !item.PermitCapture.IsNull() && !item.PermitCapture.IsUnknown() {
				if item.PermitCapture.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.capture", map[string]string{})
				}
			}
			if !item.PermitRangeStartProtocol.IsNull() && !item.PermitRangeStartProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.range.start-protocol", item.PermitRangeStartProtocol.ValueString())
			}
			if !item.PermitRangeEndProtocol.IsNull() && !item.PermitRangeEndProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.range.end-protocol", item.PermitRangeEndProtocol.ValueString())
			}
			if !item.PermitSourceAddress.IsNull() && !item.PermitSourceAddress.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.address", item.PermitSourceAddress.ValueString())
			}
			if !item.PermitSourceWildcardMask.IsNull() && !item.PermitSourceWildcardMask.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.wildcard-mask", item.PermitSourceWildcardMask.ValueString())
			}
			if !item.PermitSourcePrefixLength.IsNull() && !item.PermitSourcePrefixLength.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.prefix-length", strconv.FormatInt(item.PermitSourcePrefixLength.ValueInt64(), 10))
			}
			if !item.PermitSourceAny.IsNull() && !item.PermitSourceAny.IsUnknown() {
				if item.PermitSourceAny.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.any", map[string]string{})
				}
			}
			if !item.PermitSourceHost.IsNull() && !item.PermitSourceHost.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.host", item.PermitSourceHost.ValueString())
			}
			if !item.PermitSourceNetGroup.IsNull() && !item.PermitSourceNetGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.net-group", item.PermitSourceNetGroup.ValueString())
			}
			if !item.PermitSourcePortGroup.IsNull() && !item.PermitSourcePortGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port-group", item.PermitSourcePortGroup.ValueString())
			}
			if !item.PermitSourcePortEq.IsNull() && !item.PermitSourcePortEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.eq", item.PermitSourcePortEq.ValueString())
			}
			if !item.PermitSourcePortGt.IsNull() && !item.PermitSourcePortGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.gt", item.PermitSourcePortGt.ValueString())
			}
			if !item.PermitSourcePortLt.IsNull() && !item.PermitSourcePortLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.lt", item.PermitSourcePortLt.ValueString())
			}
			if !item.PermitSourcePortNeq.IsNull() && !item.PermitSourcePortNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.neq", item.PermitSourcePortNeq.ValueString())
			}
			if !item.PermitSourcePortRangeStartValue.IsNull() && !item.PermitSourcePortRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.range.start-value", item.PermitSourcePortRangeStartValue.ValueString())
			}
			if !item.PermitSourcePortRangeEndValue.IsNull() && !item.PermitSourcePortRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.source.port.range.end-value", item.PermitSourcePortRangeEndValue.ValueString())
			}
			if !item.PermitDestinationAddress.IsNull() && !item.PermitDestinationAddress.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.address", item.PermitDestinationAddress.ValueString())
			}
			if !item.PermitDestinationWildcardMask.IsNull() && !item.PermitDestinationWildcardMask.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.wildcard-mask", item.PermitDestinationWildcardMask.ValueString())
			}
			if !item.PermitDestinationPrefixLength.IsNull() && !item.PermitDestinationPrefixLength.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.prefix-length", strconv.FormatInt(item.PermitDestinationPrefixLength.ValueInt64(), 10))
			}
			if !item.PermitDestinationAny.IsNull() && !item.PermitDestinationAny.IsUnknown() {
				if item.PermitDestinationAny.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.any", map[string]string{})
				}
			}
			if !item.PermitDestinationHost.IsNull() && !item.PermitDestinationHost.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.host", item.PermitDestinationHost.ValueString())
			}
			if !item.PermitDestinationNetGroup.IsNull() && !item.PermitDestinationNetGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.net-group", item.PermitDestinationNetGroup.ValueString())
			}
			if !item.PermitDestinationPortGroup.IsNull() && !item.PermitDestinationPortGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port-group", item.PermitDestinationPortGroup.ValueString())
			}
			if !item.PermitDestinationPortEq.IsNull() && !item.PermitDestinationPortEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.eq", item.PermitDestinationPortEq.ValueString())
			}
			if !item.PermitDestinationPortGt.IsNull() && !item.PermitDestinationPortGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.gt", item.PermitDestinationPortGt.ValueString())
			}
			if !item.PermitDestinationPortLt.IsNull() && !item.PermitDestinationPortLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.lt", item.PermitDestinationPortLt.ValueString())
			}
			if !item.PermitDestinationPortNeq.IsNull() && !item.PermitDestinationPortNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.neq", item.PermitDestinationPortNeq.ValueString())
			}
			if !item.PermitDestinationPortRangeStartValue.IsNull() && !item.PermitDestinationPortRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.range.start-value", item.PermitDestinationPortRangeStartValue.ValueString())
			}
			if !item.PermitDestinationPortRangeEndValue.IsNull() && !item.PermitDestinationPortRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.destination.port.range.end-value", item.PermitDestinationPortRangeEndValue.ValueString())
			}
			if !item.PermitIcmpMessageTypeName.IsNull() && !item.PermitIcmpMessageTypeName.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.icmp.message-type-name", item.PermitIcmpMessageTypeName.ValueString())
			}
			if !item.PermitIcmpMessageType.IsNull() && !item.PermitIcmpMessageType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.icmp.message-type", strconv.FormatInt(item.PermitIcmpMessageType.ValueInt64(), 10))
			}
			if !item.PermitIcmpMessageCode.IsNull() && !item.PermitIcmpMessageCode.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.icmp.message-code", strconv.FormatInt(item.PermitIcmpMessageCode.ValueInt64(), 10))
			}
			if !item.PermitDscpDscpValue.IsNull() && !item.PermitDscpDscpValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.dscp-value", item.PermitDscpDscpValue.ValueString())
			}
			if !item.PermitDscpEq.IsNull() && !item.PermitDscpEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.eq", item.PermitDscpEq.ValueString())
			}
			if !item.PermitDscpGt.IsNull() && !item.PermitDscpGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.gt", item.PermitDscpGt.ValueString())
			}
			if !item.PermitDscpLt.IsNull() && !item.PermitDscpLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.lt", item.PermitDscpLt.ValueString())
			}
			if !item.PermitDscpNeq.IsNull() && !item.PermitDscpNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.neq", item.PermitDscpNeq.ValueString())
			}
			if !item.PermitDscpRangeStartValue.IsNull() && !item.PermitDscpRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.range.start-value", item.PermitDscpRangeStartValue.ValueString())
			}
			if !item.PermitDscpRangeEndValue.IsNull() && !item.PermitDscpRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.dscp.range.end-value", item.PermitDscpRangeEndValue.ValueString())
			}
			if !item.PermitPacketLengthEq.IsNull() && !item.PermitPacketLengthEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.eq", strconv.FormatInt(item.PermitPacketLengthEq.ValueInt64(), 10))
			}
			if !item.PermitPacketLengthGt.IsNull() && !item.PermitPacketLengthGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.gt", strconv.FormatInt(item.PermitPacketLengthGt.ValueInt64(), 10))
			}
			if !item.PermitPacketLengthLt.IsNull() && !item.PermitPacketLengthLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.lt", strconv.FormatInt(item.PermitPacketLengthLt.ValueInt64(), 10))
			}
			if !item.PermitPacketLengthNeq.IsNull() && !item.PermitPacketLengthNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.neq", strconv.FormatInt(item.PermitPacketLengthNeq.ValueInt64(), 10))
			}
			if !item.PermitPacketLengthRangeStartValue.IsNull() && !item.PermitPacketLengthRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.range.start-value", strconv.FormatInt(item.PermitPacketLengthRangeStartValue.ValueInt64(), 10))
			}
			if !item.PermitPacketLengthRangeEndValue.IsNull() && !item.PermitPacketLengthRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.packet-length.range.end-value", strconv.FormatInt(item.PermitPacketLengthRangeEndValue.ValueInt64(), 10))
			}
			if !item.PermitTtlEq.IsNull() && !item.PermitTtlEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.eq", strconv.FormatInt(item.PermitTtlEq.ValueInt64(), 10))
			}
			if !item.PermitTtlGt.IsNull() && !item.PermitTtlGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.gt", strconv.FormatInt(item.PermitTtlGt.ValueInt64(), 10))
			}
			if !item.PermitTtlLt.IsNull() && !item.PermitTtlLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.lt", strconv.FormatInt(item.PermitTtlLt.ValueInt64(), 10))
			}
			if !item.PermitTtlNeq.IsNull() && !item.PermitTtlNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.neq", strconv.FormatInt(item.PermitTtlNeq.ValueInt64(), 10))
			}
			if !item.PermitTtlRangeStartValue.IsNull() && !item.PermitTtlRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.range.start-value", strconv.FormatInt(item.PermitTtlRangeStartValue.ValueInt64(), 10))
			}
			if !item.PermitTtlRangeEndValue.IsNull() && !item.PermitTtlRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.ttl.range.end-value", strconv.FormatInt(item.PermitTtlRangeEndValue.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetEq.IsNull() && !item.PermitFragmentOffsetEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.eq", strconv.FormatInt(item.PermitFragmentOffsetEq.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetGt.IsNull() && !item.PermitFragmentOffsetGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.gt", strconv.FormatInt(item.PermitFragmentOffsetGt.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetLt.IsNull() && !item.PermitFragmentOffsetLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.lt", strconv.FormatInt(item.PermitFragmentOffsetLt.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetNeq.IsNull() && !item.PermitFragmentOffsetNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.neq", strconv.FormatInt(item.PermitFragmentOffsetNeq.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetRangeStartValue.IsNull() && !item.PermitFragmentOffsetRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.range.start-value", strconv.FormatInt(item.PermitFragmentOffsetRangeStartValue.ValueInt64(), 10))
			}
			if !item.PermitFragmentOffsetRangeEndValue.IsNull() && !item.PermitFragmentOffsetRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.fragment-offset.range.end-value", strconv.FormatInt(item.PermitFragmentOffsetRangeEndValue.ValueInt64(), 10))
			}
			if !item.PermitPoliceValue.IsNull() && !item.PermitPoliceValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.police.value", strconv.FormatInt(item.PermitPoliceValue.ValueInt64(), 10))
			}
			if !item.PermitPoliceUnit.IsNull() && !item.PermitPoliceUnit.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.police.unit", item.PermitPoliceUnit.ValueString())
			}
			if !item.PermitPolicePeakRate.IsNull() && !item.PermitPolicePeakRate.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.police.peak-rate", strconv.FormatInt(item.PermitPolicePeakRate.ValueInt64(), 10))
			}
			if !item.PermitPolicePeakUnit.IsNull() && !item.PermitPolicePeakUnit.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.police.peak-unit", item.PermitPolicePeakUnit.ValueString())
			}
			if !item.PermitPolicePriority.IsNull() && !item.PermitPolicePriority.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.police.priority", item.PermitPolicePriority.ValueString())
			}
			if !item.PermitNexthop1Ipv4.IsNull() && !item.PermitNexthop1Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop1.ipv4", item.PermitNexthop1Ipv4.ValueString())
			}
			if !item.PermitNexthop1Track.IsNull() && !item.PermitNexthop1Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop1.track", item.PermitNexthop1Track.ValueString())
			}
			if !item.PermitNexthop1Vrf.IsNull() && !item.PermitNexthop1Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop1.vrf", item.PermitNexthop1Vrf.ValueString())
			}
			if !item.PermitNexthop2Ipv4.IsNull() && !item.PermitNexthop2Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop2.ipv4", item.PermitNexthop2Ipv4.ValueString())
			}
			if !item.PermitNexthop2Track.IsNull() && !item.PermitNexthop2Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop2.track", item.PermitNexthop2Track.ValueString())
			}
			if !item.PermitNexthop2Vrf.IsNull() && !item.PermitNexthop2Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop2.vrf", item.PermitNexthop2Vrf.ValueString())
			}
			if !item.PermitNexthop3Ipv4.IsNull() && !item.PermitNexthop3Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop3.ipv4", item.PermitNexthop3Ipv4.ValueString())
			}
			if !item.PermitNexthop3Track.IsNull() && !item.PermitNexthop3Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop3.track", item.PermitNexthop3Track.ValueString())
			}
			if !item.PermitNexthop3Vrf.IsNull() && !item.PermitNexthop3Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.nexthop3.vrf", item.PermitNexthop3Vrf.ValueString())
			}
			if !item.PermitLog.IsNull() && !item.PermitLog.IsUnknown() {
				if item.PermitLog.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.log", map[string]string{})
				}
			}
			if !item.PermitLogInput.IsNull() && !item.PermitLogInput.IsUnknown() {
				if item.PermitLogInput.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.log-input", map[string]string{})
				}
			}
			if !item.PermitSetQosGroup.IsNull() && !item.PermitSetQosGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.set.qos-group", strconv.FormatInt(item.PermitSetQosGroup.ValueInt64(), 10))
			}
			if !item.PermitSetTtl.IsNull() && !item.PermitSetTtl.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"permit.set.ttl", strconv.FormatInt(item.PermitSetTtl.ValueInt64(), 10))
			}
			if !item.DenyEq.IsNull() && !item.DenyEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.eq", item.DenyEq.ValueString())
			}
			if !item.DenyProtocol.IsNull() && !item.DenyProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.protocol", item.DenyProtocol.ValueString())
			}
			if !item.DenySourceAddress.IsNull() && !item.DenySourceAddress.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.address", item.DenySourceAddress.ValueString())
			}
			if !item.DenySourceWildcardMask.IsNull() && !item.DenySourceWildcardMask.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.wildcard-mask", item.DenySourceWildcardMask.ValueString())
			}
			if !item.DenySourcePrefixLength.IsNull() && !item.DenySourcePrefixLength.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.prefix-length", strconv.FormatInt(item.DenySourcePrefixLength.ValueInt64(), 10))
			}
			if !item.DenySourceAny.IsNull() && !item.DenySourceAny.IsUnknown() {
				if item.DenySourceAny.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.any", map[string]string{})
				}
			}
			if !item.DenySourceHost.IsNull() && !item.DenySourceHost.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.host", item.DenySourceHost.ValueString())
			}
			if !item.DenySourceNetGroup.IsNull() && !item.DenySourceNetGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.net-group", item.DenySourceNetGroup.ValueString())
			}
			if !item.DenySourcePortGroup.IsNull() && !item.DenySourcePortGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port-group", item.DenySourcePortGroup.ValueString())
			}
			if !item.DenySourcePortEq.IsNull() && !item.DenySourcePortEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.eq", item.DenySourcePortEq.ValueString())
			}
			if !item.DenySourcePortGt.IsNull() && !item.DenySourcePortGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.gt", item.DenySourcePortGt.ValueString())
			}
			if !item.DenySourcePortLt.IsNull() && !item.DenySourcePortLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.lt", item.DenySourcePortLt.ValueString())
			}
			if !item.DenySourcePortNeq.IsNull() && !item.DenySourcePortNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.neq", item.DenySourcePortNeq.ValueString())
			}
			if !item.DenySourcePortRangeStartValue.IsNull() && !item.DenySourcePortRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.range.start-value", item.DenySourcePortRangeStartValue.ValueString())
			}
			if !item.DenySourcePortRangeEndValue.IsNull() && !item.DenySourcePortRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.source.port.range.end-value", item.DenySourcePortRangeEndValue.ValueString())
			}
			if !item.DenyDestinationAddress.IsNull() && !item.DenyDestinationAddress.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.address", item.DenyDestinationAddress.ValueString())
			}
			if !item.DenyDestinationWildcardMask.IsNull() && !item.DenyDestinationWildcardMask.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.wildcard-mask", item.DenyDestinationWildcardMask.ValueString())
			}
			if !item.DenyDestinationPrefixLength.IsNull() && !item.DenyDestinationPrefixLength.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.prefix-length", strconv.FormatInt(item.DenyDestinationPrefixLength.ValueInt64(), 10))
			}
			if !item.DenyDestinationAny.IsNull() && !item.DenyDestinationAny.IsUnknown() {
				if item.DenyDestinationAny.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.any", map[string]string{})
				}
			}
			if !item.DenyDestinationHost.IsNull() && !item.DenyDestinationHost.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.host", item.DenyDestinationHost.ValueString())
			}
			if !item.DenyDestinationNetGroup.IsNull() && !item.DenyDestinationNetGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.net-group", item.DenyDestinationNetGroup.ValueString())
			}
			if !item.DenyDestinationPortGroup.IsNull() && !item.DenyDestinationPortGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port-group", item.DenyDestinationPortGroup.ValueString())
			}
			if !item.DenyDestinationPortEq.IsNull() && !item.DenyDestinationPortEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.eq", item.DenyDestinationPortEq.ValueString())
			}
			if !item.DenyDestinationPortGt.IsNull() && !item.DenyDestinationPortGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.gt", item.DenyDestinationPortGt.ValueString())
			}
			if !item.DenyDestinationPortLt.IsNull() && !item.DenyDestinationPortLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.lt", item.DenyDestinationPortLt.ValueString())
			}
			if !item.DenyDestinationPortNeq.IsNull() && !item.DenyDestinationPortNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.neq", item.DenyDestinationPortNeq.ValueString())
			}
			if !item.DenyDestinationPortRangeStartValue.IsNull() && !item.DenyDestinationPortRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.range.start-value", item.DenyDestinationPortRangeStartValue.ValueString())
			}
			if !item.DenyDestinationPortRangeEndValue.IsNull() && !item.DenyDestinationPortRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.destination.port.range.end-value", item.DenyDestinationPortRangeEndValue.ValueString())
			}
			if !item.DenyIgmpType.IsNull() && !item.DenyIgmpType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.igmp-type", item.DenyIgmpType.ValueString())
			}
			if !item.DenyPrecedence.IsNull() && !item.DenyPrecedence.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.precedence", item.DenyPrecedence.ValueString())
			}
			if !item.DenyFragmentType.IsNull() && !item.DenyFragmentType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-type", item.DenyFragmentType.ValueString())
			}
			if !item.DenyFragments.IsNull() && !item.DenyFragments.IsUnknown() {
				if item.DenyFragments.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragments", map[string]string{})
				}
			}
			if !item.DenyCounter.IsNull() && !item.DenyCounter.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.counter", item.DenyCounter.ValueString())
			}
			if !item.DenyDefault.IsNull() && !item.DenyDefault.IsUnknown() {
				if item.DenyDefault.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.default", map[string]string{})
				}
			}
			if !item.DenyCapture.IsNull() && !item.DenyCapture.IsUnknown() {
				if item.DenyCapture.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.capture", map[string]string{})
				}
			}
			if !item.DenyIcmpOff.IsNull() && !item.DenyIcmpOff.IsUnknown() {
				if item.DenyIcmpOff.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.icmp-off", map[string]string{})
				}
			}
			if !item.DenyIcmpOn.IsNull() && !item.DenyIcmpOn.IsUnknown() {
				if item.DenyIcmpOn.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.icmp-on", map[string]string{})
				}
			}
			if !item.DenyRangeStartProtocol.IsNull() && !item.DenyRangeStartProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.range.start-protocol", item.DenyRangeStartProtocol.ValueString())
			}
			if !item.DenyRangeEndProtocol.IsNull() && !item.DenyRangeEndProtocol.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.range.end-protocol", item.DenyRangeEndProtocol.ValueString())
			}
			if !item.DenyIcmpMessageTypeName.IsNull() && !item.DenyIcmpMessageTypeName.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.icmp.message-type-name", item.DenyIcmpMessageTypeName.ValueString())
			}
			if !item.DenyIcmpMessageType.IsNull() && !item.DenyIcmpMessageType.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.icmp.message-type", strconv.FormatInt(item.DenyIcmpMessageType.ValueInt64(), 10))
			}
			if !item.DenyIcmpMessageCode.IsNull() && !item.DenyIcmpMessageCode.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.icmp.message-code", strconv.FormatInt(item.DenyIcmpMessageCode.ValueInt64(), 10))
			}
			if !item.DenyDscpDscpValue.IsNull() && !item.DenyDscpDscpValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.dscp-value", item.DenyDscpDscpValue.ValueString())
			}
			if !item.DenyDscpEq.IsNull() && !item.DenyDscpEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.eq", item.DenyDscpEq.ValueString())
			}
			if !item.DenyDscpGt.IsNull() && !item.DenyDscpGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.gt", item.DenyDscpGt.ValueString())
			}
			if !item.DenyDscpLt.IsNull() && !item.DenyDscpLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.lt", item.DenyDscpLt.ValueString())
			}
			if !item.DenyDscpNeq.IsNull() && !item.DenyDscpNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.neq", item.DenyDscpNeq.ValueString())
			}
			if !item.DenyDscpRangeStartValue.IsNull() && !item.DenyDscpRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.range.start-value", item.DenyDscpRangeStartValue.ValueString())
			}
			if !item.DenyDscpRangeEndValue.IsNull() && !item.DenyDscpRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.dscp.range.end-value", item.DenyDscpRangeEndValue.ValueString())
			}
			if !item.DenyPacketLengthEq.IsNull() && !item.DenyPacketLengthEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.eq", strconv.FormatInt(item.DenyPacketLengthEq.ValueInt64(), 10))
			}
			if !item.DenyPacketLengthGt.IsNull() && !item.DenyPacketLengthGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.gt", strconv.FormatInt(item.DenyPacketLengthGt.ValueInt64(), 10))
			}
			if !item.DenyPacketLengthLt.IsNull() && !item.DenyPacketLengthLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.lt", strconv.FormatInt(item.DenyPacketLengthLt.ValueInt64(), 10))
			}
			if !item.DenyPacketLengthNeq.IsNull() && !item.DenyPacketLengthNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.neq", strconv.FormatInt(item.DenyPacketLengthNeq.ValueInt64(), 10))
			}
			if !item.DenyPacketLengthRangeStartValue.IsNull() && !item.DenyPacketLengthRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.range.start-value", strconv.FormatInt(item.DenyPacketLengthRangeStartValue.ValueInt64(), 10))
			}
			if !item.DenyPacketLengthRangeEndValue.IsNull() && !item.DenyPacketLengthRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.packet-length.range.end-value", strconv.FormatInt(item.DenyPacketLengthRangeEndValue.ValueInt64(), 10))
			}
			if !item.DenyTtlEq.IsNull() && !item.DenyTtlEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.eq", strconv.FormatInt(item.DenyTtlEq.ValueInt64(), 10))
			}
			if !item.DenyTtlGt.IsNull() && !item.DenyTtlGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.gt", strconv.FormatInt(item.DenyTtlGt.ValueInt64(), 10))
			}
			if !item.DenyTtlLt.IsNull() && !item.DenyTtlLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.lt", strconv.FormatInt(item.DenyTtlLt.ValueInt64(), 10))
			}
			if !item.DenyTtlNeq.IsNull() && !item.DenyTtlNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.neq", strconv.FormatInt(item.DenyTtlNeq.ValueInt64(), 10))
			}
			if !item.DenyTtlRangeStartValue.IsNull() && !item.DenyTtlRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.range.start-value", strconv.FormatInt(item.DenyTtlRangeStartValue.ValueInt64(), 10))
			}
			if !item.DenyTtlRangeEndValue.IsNull() && !item.DenyTtlRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.ttl.range.end-value", strconv.FormatInt(item.DenyTtlRangeEndValue.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetEq.IsNull() && !item.DenyFragmentOffsetEq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.eq", strconv.FormatInt(item.DenyFragmentOffsetEq.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetGt.IsNull() && !item.DenyFragmentOffsetGt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.gt", strconv.FormatInt(item.DenyFragmentOffsetGt.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetLt.IsNull() && !item.DenyFragmentOffsetLt.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.lt", strconv.FormatInt(item.DenyFragmentOffsetLt.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetNeq.IsNull() && !item.DenyFragmentOffsetNeq.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.neq", strconv.FormatInt(item.DenyFragmentOffsetNeq.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetRangeStartValue.IsNull() && !item.DenyFragmentOffsetRangeStartValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.range.start-value", strconv.FormatInt(item.DenyFragmentOffsetRangeStartValue.ValueInt64(), 10))
			}
			if !item.DenyFragmentOffsetRangeEndValue.IsNull() && !item.DenyFragmentOffsetRangeEndValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.fragment-offset.range.end-value", strconv.FormatInt(item.DenyFragmentOffsetRangeEndValue.ValueInt64(), 10))
			}
			if !item.DenyPoliceValue.IsNull() && !item.DenyPoliceValue.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.police.value", strconv.FormatInt(item.DenyPoliceValue.ValueInt64(), 10))
			}
			if !item.DenyPoliceUnit.IsNull() && !item.DenyPoliceUnit.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.police.unit", item.DenyPoliceUnit.ValueString())
			}
			if !item.DenyPolicePeakRate.IsNull() && !item.DenyPolicePeakRate.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.police.peak-rate", strconv.FormatInt(item.DenyPolicePeakRate.ValueInt64(), 10))
			}
			if !item.DenyPolicePeakUnit.IsNull() && !item.DenyPolicePeakUnit.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.police.peak-unit", item.DenyPolicePeakUnit.ValueString())
			}
			if !item.DenyPolicePriority.IsNull() && !item.DenyPolicePriority.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.police.priority", item.DenyPolicePriority.ValueString())
			}
			if !item.DenyNexthop1Ipv4.IsNull() && !item.DenyNexthop1Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop1.ipv4", item.DenyNexthop1Ipv4.ValueString())
			}
			if !item.DenyNexthop1Track.IsNull() && !item.DenyNexthop1Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop1.track", item.DenyNexthop1Track.ValueString())
			}
			if !item.DenyNexthop1Vrf.IsNull() && !item.DenyNexthop1Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop1.vrf", item.DenyNexthop1Vrf.ValueString())
			}
			if !item.DenyNexthop2Ipv4.IsNull() && !item.DenyNexthop2Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop2.ipv4", item.DenyNexthop2Ipv4.ValueString())
			}
			if !item.DenyNexthop2Track.IsNull() && !item.DenyNexthop2Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop2.track", item.DenyNexthop2Track.ValueString())
			}
			if !item.DenyNexthop2Vrf.IsNull() && !item.DenyNexthop2Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop2.vrf", item.DenyNexthop2Vrf.ValueString())
			}
			if !item.DenyNexthop3Ipv4.IsNull() && !item.DenyNexthop3Ipv4.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop3.ipv4", item.DenyNexthop3Ipv4.ValueString())
			}
			if !item.DenyNexthop3Track.IsNull() && !item.DenyNexthop3Track.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop3.track", item.DenyNexthop3Track.ValueString())
			}
			if !item.DenyNexthop3Vrf.IsNull() && !item.DenyNexthop3Vrf.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.nexthop3.vrf", item.DenyNexthop3Vrf.ValueString())
			}
			if !item.DenyLog.IsNull() && !item.DenyLog.IsUnknown() {
				if item.DenyLog.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.log", map[string]string{})
				}
			}
			if !item.DenyLogInput.IsNull() && !item.DenyLogInput.IsUnknown() {
				if item.DenyLogInput.ValueBool() {
					body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.log-input", map[string]string{})
				}
			}
			if !item.DenySetQosGroup.IsNull() && !item.DenySetQosGroup.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.set.qos-group", strconv.FormatInt(item.DenySetQosGroup.ValueInt64(), 10))
			}
			if !item.DenySetTtl.IsNull() && !item.DenySetTtl.IsUnknown() {
				body, _ = sjson.Set(body, "sequences.sequence"+"."+strconv.Itoa(index)+"."+"deny.set.ttl", strconv.FormatInt(item.DenySetTtl.ValueInt64(), 10))
			}
		}
	}
	return body
}

func (data *IPv4AccessList) updateFromBody(ctx context.Context, res []byte) {
	for i := range data.Sequences {
		keys := [...]string{"sequence-number"}
		keyValues := [...]string{strconv.FormatInt(data.Sequences[i].SequenceNumber.ValueInt64(), 10)}

		var r gjson.Result
		gjson.GetBytes(res, "sequences.sequence").ForEach(
			func(_, v gjson.Result) bool {
				found := false
				for ik := range keys {
					if v.Get(keys[ik]).String() == keyValues[ik] {
						found = true
						continue
					}
					found = false
					break
				}
				if found {
					r = v
					return false
				}
				return true
			},
		)
		if value := r.Get("sequence-number"); value.Exists() && !data.Sequences[i].SequenceNumber.IsNull() {
			data.Sequences[i].SequenceNumber = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].SequenceNumber = types.Int64Null()
		}
		if value := r.Get("remark"); value.Exists() && !data.Sequences[i].Remark.IsNull() {
			data.Sequences[i].Remark = types.StringValue(value.String())
		} else {
			data.Sequences[i].Remark = types.StringNull()
		}
		if value := r.Get("permit.protocol"); value.Exists() && !data.Sequences[i].PermitProtocol.IsNull() {
			data.Sequences[i].PermitProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitProtocol = types.StringNull()
		}
		if value := r.Get("permit.eq"); value.Exists() && !data.Sequences[i].PermitEq.IsNull() {
			data.Sequences[i].PermitEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitEq = types.StringNull()
		}
		if value := r.Get("permit.igmp-type"); value.Exists() && !data.Sequences[i].PermitIgmpType.IsNull() {
			data.Sequences[i].PermitIgmpType = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitIgmpType = types.StringNull()
		}
		if value := r.Get("permit.precedence"); value.Exists() && !data.Sequences[i].PermitPrecedence.IsNull() {
			data.Sequences[i].PermitPrecedence = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitPrecedence = types.StringNull()
		}
		if value := r.Get("permit.fragment-type"); value.Exists() && !data.Sequences[i].PermitFragmentType.IsNull() {
			data.Sequences[i].PermitFragmentType = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitFragmentType = types.StringNull()
		}
		if value := r.Get("permit.fragments"); !data.Sequences[i].PermitFragments.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitFragments = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitFragments = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitFragments = types.BoolNull()
		}
		if value := r.Get("permit.counter"); value.Exists() && !data.Sequences[i].PermitCounter.IsNull() {
			data.Sequences[i].PermitCounter = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitCounter = types.StringNull()
		}
		if value := r.Get("permit.default"); !data.Sequences[i].PermitDefault.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitDefault = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitDefault = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitDefault = types.BoolNull()
		}
		if value := r.Get("permit.capture"); !data.Sequences[i].PermitCapture.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitCapture = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitCapture = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitCapture = types.BoolNull()
		}
		if value := r.Get("permit.range.start-protocol"); value.Exists() && !data.Sequences[i].PermitRangeStartProtocol.IsNull() {
			data.Sequences[i].PermitRangeStartProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitRangeStartProtocol = types.StringNull()
		}
		if value := r.Get("permit.range.end-protocol"); value.Exists() && !data.Sequences[i].PermitRangeEndProtocol.IsNull() {
			data.Sequences[i].PermitRangeEndProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitRangeEndProtocol = types.StringNull()
		}
		if value := r.Get("permit.source.address"); value.Exists() && !data.Sequences[i].PermitSourceAddress.IsNull() {
			data.Sequences[i].PermitSourceAddress = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourceAddress = types.StringNull()
		}
		if value := r.Get("permit.source.wildcard-mask"); value.Exists() && !data.Sequences[i].PermitSourceWildcardMask.IsNull() {
			data.Sequences[i].PermitSourceWildcardMask = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourceWildcardMask = types.StringNull()
		}
		if value := r.Get("permit.source.prefix-length"); value.Exists() && !data.Sequences[i].PermitSourcePrefixLength.IsNull() {
			data.Sequences[i].PermitSourcePrefixLength = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitSourcePrefixLength = types.Int64Null()
		}
		if value := r.Get("permit.source.any"); !data.Sequences[i].PermitSourceAny.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitSourceAny = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitSourceAny = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitSourceAny = types.BoolNull()
		}
		if value := r.Get("permit.source.host"); value.Exists() && !data.Sequences[i].PermitSourceHost.IsNull() {
			data.Sequences[i].PermitSourceHost = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourceHost = types.StringNull()
		}
		if value := r.Get("permit.source.net-group"); value.Exists() && !data.Sequences[i].PermitSourceNetGroup.IsNull() {
			data.Sequences[i].PermitSourceNetGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourceNetGroup = types.StringNull()
		}
		if value := r.Get("permit.source.port-group"); value.Exists() && !data.Sequences[i].PermitSourcePortGroup.IsNull() {
			data.Sequences[i].PermitSourcePortGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortGroup = types.StringNull()
		}
		if value := r.Get("permit.source.port.eq"); value.Exists() && !data.Sequences[i].PermitSourcePortEq.IsNull() {
			data.Sequences[i].PermitSourcePortEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortEq = types.StringNull()
		}
		if value := r.Get("permit.source.port.gt"); value.Exists() && !data.Sequences[i].PermitSourcePortGt.IsNull() {
			data.Sequences[i].PermitSourcePortGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortGt = types.StringNull()
		}
		if value := r.Get("permit.source.port.lt"); value.Exists() && !data.Sequences[i].PermitSourcePortLt.IsNull() {
			data.Sequences[i].PermitSourcePortLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortLt = types.StringNull()
		}
		if value := r.Get("permit.source.port.neq"); value.Exists() && !data.Sequences[i].PermitSourcePortNeq.IsNull() {
			data.Sequences[i].PermitSourcePortNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortNeq = types.StringNull()
		}
		if value := r.Get("permit.source.port.range.start-value"); value.Exists() && !data.Sequences[i].PermitSourcePortRangeStartValue.IsNull() {
			data.Sequences[i].PermitSourcePortRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortRangeStartValue = types.StringNull()
		}
		if value := r.Get("permit.source.port.range.end-value"); value.Exists() && !data.Sequences[i].PermitSourcePortRangeEndValue.IsNull() {
			data.Sequences[i].PermitSourcePortRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitSourcePortRangeEndValue = types.StringNull()
		}
		if value := r.Get("permit.destination.address"); value.Exists() && !data.Sequences[i].PermitDestinationAddress.IsNull() {
			data.Sequences[i].PermitDestinationAddress = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationAddress = types.StringNull()
		}
		if value := r.Get("permit.destination.wildcard-mask"); value.Exists() && !data.Sequences[i].PermitDestinationWildcardMask.IsNull() {
			data.Sequences[i].PermitDestinationWildcardMask = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationWildcardMask = types.StringNull()
		}
		if value := r.Get("permit.destination.prefix-length"); value.Exists() && !data.Sequences[i].PermitDestinationPrefixLength.IsNull() {
			data.Sequences[i].PermitDestinationPrefixLength = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitDestinationPrefixLength = types.Int64Null()
		}
		if value := r.Get("permit.destination.any"); !data.Sequences[i].PermitDestinationAny.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitDestinationAny = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitDestinationAny = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitDestinationAny = types.BoolNull()
		}
		if value := r.Get("permit.destination.host"); value.Exists() && !data.Sequences[i].PermitDestinationHost.IsNull() {
			data.Sequences[i].PermitDestinationHost = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationHost = types.StringNull()
		}
		if value := r.Get("permit.destination.net-group"); value.Exists() && !data.Sequences[i].PermitDestinationNetGroup.IsNull() {
			data.Sequences[i].PermitDestinationNetGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationNetGroup = types.StringNull()
		}
		if value := r.Get("permit.destination.port-group"); value.Exists() && !data.Sequences[i].PermitDestinationPortGroup.IsNull() {
			data.Sequences[i].PermitDestinationPortGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortGroup = types.StringNull()
		}
		if value := r.Get("permit.destination.port.eq"); value.Exists() && !data.Sequences[i].PermitDestinationPortEq.IsNull() {
			data.Sequences[i].PermitDestinationPortEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortEq = types.StringNull()
		}
		if value := r.Get("permit.destination.port.gt"); value.Exists() && !data.Sequences[i].PermitDestinationPortGt.IsNull() {
			data.Sequences[i].PermitDestinationPortGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortGt = types.StringNull()
		}
		if value := r.Get("permit.destination.port.lt"); value.Exists() && !data.Sequences[i].PermitDestinationPortLt.IsNull() {
			data.Sequences[i].PermitDestinationPortLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortLt = types.StringNull()
		}
		if value := r.Get("permit.destination.port.neq"); value.Exists() && !data.Sequences[i].PermitDestinationPortNeq.IsNull() {
			data.Sequences[i].PermitDestinationPortNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortNeq = types.StringNull()
		}
		if value := r.Get("permit.destination.port.range.start-value"); value.Exists() && !data.Sequences[i].PermitDestinationPortRangeStartValue.IsNull() {
			data.Sequences[i].PermitDestinationPortRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortRangeStartValue = types.StringNull()
		}
		if value := r.Get("permit.destination.port.range.end-value"); value.Exists() && !data.Sequences[i].PermitDestinationPortRangeEndValue.IsNull() {
			data.Sequences[i].PermitDestinationPortRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDestinationPortRangeEndValue = types.StringNull()
		}
		if value := r.Get("permit.icmp.message-type-name"); value.Exists() && !data.Sequences[i].PermitIcmpMessageTypeName.IsNull() {
			data.Sequences[i].PermitIcmpMessageTypeName = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitIcmpMessageTypeName = types.StringNull()
		}
		if value := r.Get("permit.icmp.message-type"); value.Exists() && !data.Sequences[i].PermitIcmpMessageType.IsNull() {
			data.Sequences[i].PermitIcmpMessageType = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitIcmpMessageType = types.Int64Null()
		}
		if value := r.Get("permit.icmp.message-code"); value.Exists() && !data.Sequences[i].PermitIcmpMessageCode.IsNull() {
			data.Sequences[i].PermitIcmpMessageCode = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitIcmpMessageCode = types.Int64Null()
		}
		if value := r.Get("permit.dscp.dscp-value"); value.Exists() && !data.Sequences[i].PermitDscpDscpValue.IsNull() {
			data.Sequences[i].PermitDscpDscpValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpDscpValue = types.StringNull()
		}
		if value := r.Get("permit.dscp.eq"); value.Exists() && !data.Sequences[i].PermitDscpEq.IsNull() {
			data.Sequences[i].PermitDscpEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpEq = types.StringNull()
		}
		if value := r.Get("permit.dscp.gt"); value.Exists() && !data.Sequences[i].PermitDscpGt.IsNull() {
			data.Sequences[i].PermitDscpGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpGt = types.StringNull()
		}
		if value := r.Get("permit.dscp.lt"); value.Exists() && !data.Sequences[i].PermitDscpLt.IsNull() {
			data.Sequences[i].PermitDscpLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpLt = types.StringNull()
		}
		if value := r.Get("permit.dscp.neq"); value.Exists() && !data.Sequences[i].PermitDscpNeq.IsNull() {
			data.Sequences[i].PermitDscpNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpNeq = types.StringNull()
		}
		if value := r.Get("permit.dscp.range.start-value"); value.Exists() && !data.Sequences[i].PermitDscpRangeStartValue.IsNull() {
			data.Sequences[i].PermitDscpRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpRangeStartValue = types.StringNull()
		}
		if value := r.Get("permit.dscp.range.end-value"); value.Exists() && !data.Sequences[i].PermitDscpRangeEndValue.IsNull() {
			data.Sequences[i].PermitDscpRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitDscpRangeEndValue = types.StringNull()
		}
		if value := r.Get("permit.packet-length.eq"); value.Exists() && !data.Sequences[i].PermitPacketLengthEq.IsNull() {
			data.Sequences[i].PermitPacketLengthEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthEq = types.Int64Null()
		}
		if value := r.Get("permit.packet-length.gt"); value.Exists() && !data.Sequences[i].PermitPacketLengthGt.IsNull() {
			data.Sequences[i].PermitPacketLengthGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthGt = types.Int64Null()
		}
		if value := r.Get("permit.packet-length.lt"); value.Exists() && !data.Sequences[i].PermitPacketLengthLt.IsNull() {
			data.Sequences[i].PermitPacketLengthLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthLt = types.Int64Null()
		}
		if value := r.Get("permit.packet-length.neq"); value.Exists() && !data.Sequences[i].PermitPacketLengthNeq.IsNull() {
			data.Sequences[i].PermitPacketLengthNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthNeq = types.Int64Null()
		}
		if value := r.Get("permit.packet-length.range.start-value"); value.Exists() && !data.Sequences[i].PermitPacketLengthRangeStartValue.IsNull() {
			data.Sequences[i].PermitPacketLengthRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthRangeStartValue = types.Int64Null()
		}
		if value := r.Get("permit.packet-length.range.end-value"); value.Exists() && !data.Sequences[i].PermitPacketLengthRangeEndValue.IsNull() {
			data.Sequences[i].PermitPacketLengthRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPacketLengthRangeEndValue = types.Int64Null()
		}
		if value := r.Get("permit.ttl.eq"); value.Exists() && !data.Sequences[i].PermitTtlEq.IsNull() {
			data.Sequences[i].PermitTtlEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlEq = types.Int64Null()
		}
		if value := r.Get("permit.ttl.gt"); value.Exists() && !data.Sequences[i].PermitTtlGt.IsNull() {
			data.Sequences[i].PermitTtlGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlGt = types.Int64Null()
		}
		if value := r.Get("permit.ttl.lt"); value.Exists() && !data.Sequences[i].PermitTtlLt.IsNull() {
			data.Sequences[i].PermitTtlLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlLt = types.Int64Null()
		}
		if value := r.Get("permit.ttl.neq"); value.Exists() && !data.Sequences[i].PermitTtlNeq.IsNull() {
			data.Sequences[i].PermitTtlNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlNeq = types.Int64Null()
		}
		if value := r.Get("permit.ttl.range.start-value"); value.Exists() && !data.Sequences[i].PermitTtlRangeStartValue.IsNull() {
			data.Sequences[i].PermitTtlRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlRangeStartValue = types.Int64Null()
		}
		if value := r.Get("permit.ttl.range.end-value"); value.Exists() && !data.Sequences[i].PermitTtlRangeEndValue.IsNull() {
			data.Sequences[i].PermitTtlRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitTtlRangeEndValue = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.eq"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetEq.IsNull() {
			data.Sequences[i].PermitFragmentOffsetEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetEq = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.gt"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetGt.IsNull() {
			data.Sequences[i].PermitFragmentOffsetGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetGt = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.lt"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetLt.IsNull() {
			data.Sequences[i].PermitFragmentOffsetLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetLt = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.neq"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetNeq.IsNull() {
			data.Sequences[i].PermitFragmentOffsetNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetNeq = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.range.start-value"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetRangeStartValue.IsNull() {
			data.Sequences[i].PermitFragmentOffsetRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetRangeStartValue = types.Int64Null()
		}
		if value := r.Get("permit.fragment-offset.range.end-value"); value.Exists() && !data.Sequences[i].PermitFragmentOffsetRangeEndValue.IsNull() {
			data.Sequences[i].PermitFragmentOffsetRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitFragmentOffsetRangeEndValue = types.Int64Null()
		}
		if value := r.Get("permit.police.value"); value.Exists() && !data.Sequences[i].PermitPoliceValue.IsNull() {
			data.Sequences[i].PermitPoliceValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPoliceValue = types.Int64Null()
		}
		if value := r.Get("permit.police.unit"); value.Exists() && !data.Sequences[i].PermitPoliceUnit.IsNull() {
			data.Sequences[i].PermitPoliceUnit = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitPoliceUnit = types.StringNull()
		}
		if value := r.Get("permit.police.peak-rate"); value.Exists() && !data.Sequences[i].PermitPolicePeakRate.IsNull() {
			data.Sequences[i].PermitPolicePeakRate = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitPolicePeakRate = types.Int64Null()
		}
		if value := r.Get("permit.police.peak-unit"); value.Exists() && !data.Sequences[i].PermitPolicePeakUnit.IsNull() {
			data.Sequences[i].PermitPolicePeakUnit = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitPolicePeakUnit = types.StringNull()
		}
		if value := r.Get("permit.police.priority"); value.Exists() && !data.Sequences[i].PermitPolicePriority.IsNull() {
			data.Sequences[i].PermitPolicePriority = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitPolicePriority = types.StringNull()
		}
		if value := r.Get("permit.nexthop1.ipv4"); value.Exists() && !data.Sequences[i].PermitNexthop1Ipv4.IsNull() {
			data.Sequences[i].PermitNexthop1Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop1Ipv4 = types.StringNull()
		}
		if value := r.Get("permit.nexthop1.track"); value.Exists() && !data.Sequences[i].PermitNexthop1Track.IsNull() {
			data.Sequences[i].PermitNexthop1Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop1Track = types.StringNull()
		}
		if value := r.Get("permit.nexthop1.vrf"); value.Exists() && !data.Sequences[i].PermitNexthop1Vrf.IsNull() {
			data.Sequences[i].PermitNexthop1Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop1Vrf = types.StringNull()
		}
		if value := r.Get("permit.nexthop2.ipv4"); value.Exists() && !data.Sequences[i].PermitNexthop2Ipv4.IsNull() {
			data.Sequences[i].PermitNexthop2Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop2Ipv4 = types.StringNull()
		}
		if value := r.Get("permit.nexthop2.track"); value.Exists() && !data.Sequences[i].PermitNexthop2Track.IsNull() {
			data.Sequences[i].PermitNexthop2Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop2Track = types.StringNull()
		}
		if value := r.Get("permit.nexthop2.vrf"); value.Exists() && !data.Sequences[i].PermitNexthop2Vrf.IsNull() {
			data.Sequences[i].PermitNexthop2Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop2Vrf = types.StringNull()
		}
		if value := r.Get("permit.nexthop3.ipv4"); value.Exists() && !data.Sequences[i].PermitNexthop3Ipv4.IsNull() {
			data.Sequences[i].PermitNexthop3Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop3Ipv4 = types.StringNull()
		}
		if value := r.Get("permit.nexthop3.track"); value.Exists() && !data.Sequences[i].PermitNexthop3Track.IsNull() {
			data.Sequences[i].PermitNexthop3Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop3Track = types.StringNull()
		}
		if value := r.Get("permit.nexthop3.vrf"); value.Exists() && !data.Sequences[i].PermitNexthop3Vrf.IsNull() {
			data.Sequences[i].PermitNexthop3Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].PermitNexthop3Vrf = types.StringNull()
		}
		if value := r.Get("permit.log"); !data.Sequences[i].PermitLog.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitLog = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitLog = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitLog = types.BoolNull()
		}
		if value := r.Get("permit.log-input"); !data.Sequences[i].PermitLogInput.IsNull() {
			if value.Exists() {
				data.Sequences[i].PermitLogInput = types.BoolValue(true)
			} else {
				data.Sequences[i].PermitLogInput = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].PermitLogInput = types.BoolNull()
		}
		if value := r.Get("permit.set.qos-group"); value.Exists() && !data.Sequences[i].PermitSetQosGroup.IsNull() {
			data.Sequences[i].PermitSetQosGroup = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitSetQosGroup = types.Int64Null()
		}
		if value := r.Get("permit.set.ttl"); value.Exists() && !data.Sequences[i].PermitSetTtl.IsNull() {
			data.Sequences[i].PermitSetTtl = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].PermitSetTtl = types.Int64Null()
		}
		if value := r.Get("deny.eq"); value.Exists() && !data.Sequences[i].DenyEq.IsNull() {
			data.Sequences[i].DenyEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyEq = types.StringNull()
		}
		if value := r.Get("deny.protocol"); value.Exists() && !data.Sequences[i].DenyProtocol.IsNull() {
			data.Sequences[i].DenyProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyProtocol = types.StringNull()
		}
		if value := r.Get("deny.source.address"); value.Exists() && !data.Sequences[i].DenySourceAddress.IsNull() {
			data.Sequences[i].DenySourceAddress = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourceAddress = types.StringNull()
		}
		if value := r.Get("deny.source.wildcard-mask"); value.Exists() && !data.Sequences[i].DenySourceWildcardMask.IsNull() {
			data.Sequences[i].DenySourceWildcardMask = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourceWildcardMask = types.StringNull()
		}
		if value := r.Get("deny.source.prefix-length"); value.Exists() && !data.Sequences[i].DenySourcePrefixLength.IsNull() {
			data.Sequences[i].DenySourcePrefixLength = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenySourcePrefixLength = types.Int64Null()
		}
		if value := r.Get("deny.source.any"); !data.Sequences[i].DenySourceAny.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenySourceAny = types.BoolValue(true)
			} else {
				data.Sequences[i].DenySourceAny = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenySourceAny = types.BoolNull()
		}
		if value := r.Get("deny.source.host"); value.Exists() && !data.Sequences[i].DenySourceHost.IsNull() {
			data.Sequences[i].DenySourceHost = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourceHost = types.StringNull()
		}
		if value := r.Get("deny.source.net-group"); value.Exists() && !data.Sequences[i].DenySourceNetGroup.IsNull() {
			data.Sequences[i].DenySourceNetGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourceNetGroup = types.StringNull()
		}
		if value := r.Get("deny.source.port-group"); value.Exists() && !data.Sequences[i].DenySourcePortGroup.IsNull() {
			data.Sequences[i].DenySourcePortGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortGroup = types.StringNull()
		}
		if value := r.Get("deny.source.port.eq"); value.Exists() && !data.Sequences[i].DenySourcePortEq.IsNull() {
			data.Sequences[i].DenySourcePortEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortEq = types.StringNull()
		}
		if value := r.Get("deny.source.port.gt"); value.Exists() && !data.Sequences[i].DenySourcePortGt.IsNull() {
			data.Sequences[i].DenySourcePortGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortGt = types.StringNull()
		}
		if value := r.Get("deny.source.port.lt"); value.Exists() && !data.Sequences[i].DenySourcePortLt.IsNull() {
			data.Sequences[i].DenySourcePortLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortLt = types.StringNull()
		}
		if value := r.Get("deny.source.port.neq"); value.Exists() && !data.Sequences[i].DenySourcePortNeq.IsNull() {
			data.Sequences[i].DenySourcePortNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortNeq = types.StringNull()
		}
		if value := r.Get("deny.source.port.range.start-value"); value.Exists() && !data.Sequences[i].DenySourcePortRangeStartValue.IsNull() {
			data.Sequences[i].DenySourcePortRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortRangeStartValue = types.StringNull()
		}
		if value := r.Get("deny.source.port.range.end-value"); value.Exists() && !data.Sequences[i].DenySourcePortRangeEndValue.IsNull() {
			data.Sequences[i].DenySourcePortRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenySourcePortRangeEndValue = types.StringNull()
		}
		if value := r.Get("deny.destination.address"); value.Exists() && !data.Sequences[i].DenyDestinationAddress.IsNull() {
			data.Sequences[i].DenyDestinationAddress = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationAddress = types.StringNull()
		}
		if value := r.Get("deny.destination.wildcard-mask"); value.Exists() && !data.Sequences[i].DenyDestinationWildcardMask.IsNull() {
			data.Sequences[i].DenyDestinationWildcardMask = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationWildcardMask = types.StringNull()
		}
		if value := r.Get("deny.destination.prefix-length"); value.Exists() && !data.Sequences[i].DenyDestinationPrefixLength.IsNull() {
			data.Sequences[i].DenyDestinationPrefixLength = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyDestinationPrefixLength = types.Int64Null()
		}
		if value := r.Get("deny.destination.any"); !data.Sequences[i].DenyDestinationAny.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyDestinationAny = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyDestinationAny = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyDestinationAny = types.BoolNull()
		}
		if value := r.Get("deny.destination.host"); value.Exists() && !data.Sequences[i].DenyDestinationHost.IsNull() {
			data.Sequences[i].DenyDestinationHost = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationHost = types.StringNull()
		}
		if value := r.Get("deny.destination.net-group"); value.Exists() && !data.Sequences[i].DenyDestinationNetGroup.IsNull() {
			data.Sequences[i].DenyDestinationNetGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationNetGroup = types.StringNull()
		}
		if value := r.Get("deny.destination.port-group"); value.Exists() && !data.Sequences[i].DenyDestinationPortGroup.IsNull() {
			data.Sequences[i].DenyDestinationPortGroup = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortGroup = types.StringNull()
		}
		if value := r.Get("deny.destination.port.eq"); value.Exists() && !data.Sequences[i].DenyDestinationPortEq.IsNull() {
			data.Sequences[i].DenyDestinationPortEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortEq = types.StringNull()
		}
		if value := r.Get("deny.destination.port.gt"); value.Exists() && !data.Sequences[i].DenyDestinationPortGt.IsNull() {
			data.Sequences[i].DenyDestinationPortGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortGt = types.StringNull()
		}
		if value := r.Get("deny.destination.port.lt"); value.Exists() && !data.Sequences[i].DenyDestinationPortLt.IsNull() {
			data.Sequences[i].DenyDestinationPortLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortLt = types.StringNull()
		}
		if value := r.Get("deny.destination.port.neq"); value.Exists() && !data.Sequences[i].DenyDestinationPortNeq.IsNull() {
			data.Sequences[i].DenyDestinationPortNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortNeq = types.StringNull()
		}
		if value := r.Get("deny.destination.port.range.start-value"); value.Exists() && !data.Sequences[i].DenyDestinationPortRangeStartValue.IsNull() {
			data.Sequences[i].DenyDestinationPortRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortRangeStartValue = types.StringNull()
		}
		if value := r.Get("deny.destination.port.range.end-value"); value.Exists() && !data.Sequences[i].DenyDestinationPortRangeEndValue.IsNull() {
			data.Sequences[i].DenyDestinationPortRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDestinationPortRangeEndValue = types.StringNull()
		}
		if value := r.Get("deny.igmp-type"); value.Exists() && !data.Sequences[i].DenyIgmpType.IsNull() {
			data.Sequences[i].DenyIgmpType = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyIgmpType = types.StringNull()
		}
		if value := r.Get("deny.precedence"); value.Exists() && !data.Sequences[i].DenyPrecedence.IsNull() {
			data.Sequences[i].DenyPrecedence = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyPrecedence = types.StringNull()
		}
		if value := r.Get("deny.fragment-type"); value.Exists() && !data.Sequences[i].DenyFragmentType.IsNull() {
			data.Sequences[i].DenyFragmentType = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyFragmentType = types.StringNull()
		}
		if value := r.Get("deny.fragments"); !data.Sequences[i].DenyFragments.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyFragments = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyFragments = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyFragments = types.BoolNull()
		}
		if value := r.Get("deny.counter"); value.Exists() && !data.Sequences[i].DenyCounter.IsNull() {
			data.Sequences[i].DenyCounter = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyCounter = types.StringNull()
		}
		if value := r.Get("deny.default"); !data.Sequences[i].DenyDefault.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyDefault = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyDefault = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyDefault = types.BoolNull()
		}
		if value := r.Get("deny.capture"); !data.Sequences[i].DenyCapture.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyCapture = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyCapture = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyCapture = types.BoolNull()
		}
		if value := r.Get("deny.icmp-off"); !data.Sequences[i].DenyIcmpOff.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyIcmpOff = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyIcmpOff = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyIcmpOff = types.BoolNull()
		}
		if value := r.Get("deny.icmp-on"); !data.Sequences[i].DenyIcmpOn.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyIcmpOn = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyIcmpOn = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyIcmpOn = types.BoolNull()
		}
		if value := r.Get("deny.range.start-protocol"); value.Exists() && !data.Sequences[i].DenyRangeStartProtocol.IsNull() {
			data.Sequences[i].DenyRangeStartProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyRangeStartProtocol = types.StringNull()
		}
		if value := r.Get("deny.range.end-protocol"); value.Exists() && !data.Sequences[i].DenyRangeEndProtocol.IsNull() {
			data.Sequences[i].DenyRangeEndProtocol = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyRangeEndProtocol = types.StringNull()
		}
		if value := r.Get("deny.icmp.message-type-name"); value.Exists() && !data.Sequences[i].DenyIcmpMessageTypeName.IsNull() {
			data.Sequences[i].DenyIcmpMessageTypeName = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyIcmpMessageTypeName = types.StringNull()
		}
		if value := r.Get("deny.icmp.message-type"); value.Exists() && !data.Sequences[i].DenyIcmpMessageType.IsNull() {
			data.Sequences[i].DenyIcmpMessageType = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyIcmpMessageType = types.Int64Null()
		}
		if value := r.Get("deny.icmp.message-code"); value.Exists() && !data.Sequences[i].DenyIcmpMessageCode.IsNull() {
			data.Sequences[i].DenyIcmpMessageCode = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyIcmpMessageCode = types.Int64Null()
		}
		if value := r.Get("deny.dscp.dscp-value"); value.Exists() && !data.Sequences[i].DenyDscpDscpValue.IsNull() {
			data.Sequences[i].DenyDscpDscpValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpDscpValue = types.StringNull()
		}
		if value := r.Get("deny.dscp.eq"); value.Exists() && !data.Sequences[i].DenyDscpEq.IsNull() {
			data.Sequences[i].DenyDscpEq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpEq = types.StringNull()
		}
		if value := r.Get("deny.dscp.gt"); value.Exists() && !data.Sequences[i].DenyDscpGt.IsNull() {
			data.Sequences[i].DenyDscpGt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpGt = types.StringNull()
		}
		if value := r.Get("deny.dscp.lt"); value.Exists() && !data.Sequences[i].DenyDscpLt.IsNull() {
			data.Sequences[i].DenyDscpLt = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpLt = types.StringNull()
		}
		if value := r.Get("deny.dscp.neq"); value.Exists() && !data.Sequences[i].DenyDscpNeq.IsNull() {
			data.Sequences[i].DenyDscpNeq = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpNeq = types.StringNull()
		}
		if value := r.Get("deny.dscp.range.start-value"); value.Exists() && !data.Sequences[i].DenyDscpRangeStartValue.IsNull() {
			data.Sequences[i].DenyDscpRangeStartValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpRangeStartValue = types.StringNull()
		}
		if value := r.Get("deny.dscp.range.end-value"); value.Exists() && !data.Sequences[i].DenyDscpRangeEndValue.IsNull() {
			data.Sequences[i].DenyDscpRangeEndValue = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyDscpRangeEndValue = types.StringNull()
		}
		if value := r.Get("deny.packet-length.eq"); value.Exists() && !data.Sequences[i].DenyPacketLengthEq.IsNull() {
			data.Sequences[i].DenyPacketLengthEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthEq = types.Int64Null()
		}
		if value := r.Get("deny.packet-length.gt"); value.Exists() && !data.Sequences[i].DenyPacketLengthGt.IsNull() {
			data.Sequences[i].DenyPacketLengthGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthGt = types.Int64Null()
		}
		if value := r.Get("deny.packet-length.lt"); value.Exists() && !data.Sequences[i].DenyPacketLengthLt.IsNull() {
			data.Sequences[i].DenyPacketLengthLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthLt = types.Int64Null()
		}
		if value := r.Get("deny.packet-length.neq"); value.Exists() && !data.Sequences[i].DenyPacketLengthNeq.IsNull() {
			data.Sequences[i].DenyPacketLengthNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthNeq = types.Int64Null()
		}
		if value := r.Get("deny.packet-length.range.start-value"); value.Exists() && !data.Sequences[i].DenyPacketLengthRangeStartValue.IsNull() {
			data.Sequences[i].DenyPacketLengthRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthRangeStartValue = types.Int64Null()
		}
		if value := r.Get("deny.packet-length.range.end-value"); value.Exists() && !data.Sequences[i].DenyPacketLengthRangeEndValue.IsNull() {
			data.Sequences[i].DenyPacketLengthRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPacketLengthRangeEndValue = types.Int64Null()
		}
		if value := r.Get("deny.ttl.eq"); value.Exists() && !data.Sequences[i].DenyTtlEq.IsNull() {
			data.Sequences[i].DenyTtlEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlEq = types.Int64Null()
		}
		if value := r.Get("deny.ttl.gt"); value.Exists() && !data.Sequences[i].DenyTtlGt.IsNull() {
			data.Sequences[i].DenyTtlGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlGt = types.Int64Null()
		}
		if value := r.Get("deny.ttl.lt"); value.Exists() && !data.Sequences[i].DenyTtlLt.IsNull() {
			data.Sequences[i].DenyTtlLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlLt = types.Int64Null()
		}
		if value := r.Get("deny.ttl.neq"); value.Exists() && !data.Sequences[i].DenyTtlNeq.IsNull() {
			data.Sequences[i].DenyTtlNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlNeq = types.Int64Null()
		}
		if value := r.Get("deny.ttl.range.start-value"); value.Exists() && !data.Sequences[i].DenyTtlRangeStartValue.IsNull() {
			data.Sequences[i].DenyTtlRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlRangeStartValue = types.Int64Null()
		}
		if value := r.Get("deny.ttl.range.end-value"); value.Exists() && !data.Sequences[i].DenyTtlRangeEndValue.IsNull() {
			data.Sequences[i].DenyTtlRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyTtlRangeEndValue = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.eq"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetEq.IsNull() {
			data.Sequences[i].DenyFragmentOffsetEq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetEq = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.gt"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetGt.IsNull() {
			data.Sequences[i].DenyFragmentOffsetGt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetGt = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.lt"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetLt.IsNull() {
			data.Sequences[i].DenyFragmentOffsetLt = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetLt = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.neq"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetNeq.IsNull() {
			data.Sequences[i].DenyFragmentOffsetNeq = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetNeq = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.range.start-value"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetRangeStartValue.IsNull() {
			data.Sequences[i].DenyFragmentOffsetRangeStartValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetRangeStartValue = types.Int64Null()
		}
		if value := r.Get("deny.fragment-offset.range.end-value"); value.Exists() && !data.Sequences[i].DenyFragmentOffsetRangeEndValue.IsNull() {
			data.Sequences[i].DenyFragmentOffsetRangeEndValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyFragmentOffsetRangeEndValue = types.Int64Null()
		}
		if value := r.Get("deny.police.value"); value.Exists() && !data.Sequences[i].DenyPoliceValue.IsNull() {
			data.Sequences[i].DenyPoliceValue = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPoliceValue = types.Int64Null()
		}
		if value := r.Get("deny.police.unit"); value.Exists() && !data.Sequences[i].DenyPoliceUnit.IsNull() {
			data.Sequences[i].DenyPoliceUnit = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyPoliceUnit = types.StringNull()
		}
		if value := r.Get("deny.police.peak-rate"); value.Exists() && !data.Sequences[i].DenyPolicePeakRate.IsNull() {
			data.Sequences[i].DenyPolicePeakRate = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenyPolicePeakRate = types.Int64Null()
		}
		if value := r.Get("deny.police.peak-unit"); value.Exists() && !data.Sequences[i].DenyPolicePeakUnit.IsNull() {
			data.Sequences[i].DenyPolicePeakUnit = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyPolicePeakUnit = types.StringNull()
		}
		if value := r.Get("deny.police.priority"); value.Exists() && !data.Sequences[i].DenyPolicePriority.IsNull() {
			data.Sequences[i].DenyPolicePriority = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyPolicePriority = types.StringNull()
		}
		if value := r.Get("deny.nexthop1.ipv4"); value.Exists() && !data.Sequences[i].DenyNexthop1Ipv4.IsNull() {
			data.Sequences[i].DenyNexthop1Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop1Ipv4 = types.StringNull()
		}
		if value := r.Get("deny.nexthop1.track"); value.Exists() && !data.Sequences[i].DenyNexthop1Track.IsNull() {
			data.Sequences[i].DenyNexthop1Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop1Track = types.StringNull()
		}
		if value := r.Get("deny.nexthop1.vrf"); value.Exists() && !data.Sequences[i].DenyNexthop1Vrf.IsNull() {
			data.Sequences[i].DenyNexthop1Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop1Vrf = types.StringNull()
		}
		if value := r.Get("deny.nexthop2.ipv4"); value.Exists() && !data.Sequences[i].DenyNexthop2Ipv4.IsNull() {
			data.Sequences[i].DenyNexthop2Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop2Ipv4 = types.StringNull()
		}
		if value := r.Get("deny.nexthop2.track"); value.Exists() && !data.Sequences[i].DenyNexthop2Track.IsNull() {
			data.Sequences[i].DenyNexthop2Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop2Track = types.StringNull()
		}
		if value := r.Get("deny.nexthop2.vrf"); value.Exists() && !data.Sequences[i].DenyNexthop2Vrf.IsNull() {
			data.Sequences[i].DenyNexthop2Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop2Vrf = types.StringNull()
		}
		if value := r.Get("deny.nexthop3.ipv4"); value.Exists() && !data.Sequences[i].DenyNexthop3Ipv4.IsNull() {
			data.Sequences[i].DenyNexthop3Ipv4 = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop3Ipv4 = types.StringNull()
		}
		if value := r.Get("deny.nexthop3.track"); value.Exists() && !data.Sequences[i].DenyNexthop3Track.IsNull() {
			data.Sequences[i].DenyNexthop3Track = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop3Track = types.StringNull()
		}
		if value := r.Get("deny.nexthop3.vrf"); value.Exists() && !data.Sequences[i].DenyNexthop3Vrf.IsNull() {
			data.Sequences[i].DenyNexthop3Vrf = types.StringValue(value.String())
		} else {
			data.Sequences[i].DenyNexthop3Vrf = types.StringNull()
		}
		if value := r.Get("deny.log"); !data.Sequences[i].DenyLog.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyLog = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyLog = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyLog = types.BoolNull()
		}
		if value := r.Get("deny.log-input"); !data.Sequences[i].DenyLogInput.IsNull() {
			if value.Exists() {
				data.Sequences[i].DenyLogInput = types.BoolValue(true)
			} else {
				data.Sequences[i].DenyLogInput = types.BoolValue(false)
			}
		} else {
			data.Sequences[i].DenyLogInput = types.BoolNull()
		}
		if value := r.Get("deny.set.qos-group"); value.Exists() && !data.Sequences[i].DenySetQosGroup.IsNull() {
			data.Sequences[i].DenySetQosGroup = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenySetQosGroup = types.Int64Null()
		}
		if value := r.Get("deny.set.ttl"); value.Exists() && !data.Sequences[i].DenySetTtl.IsNull() {
			data.Sequences[i].DenySetTtl = types.Int64Value(value.Int())
		} else {
			data.Sequences[i].DenySetTtl = types.Int64Null()
		}
	}
}

func (data *IPv4AccessList) fromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "sequences.sequence"); value.Exists() {
		data.Sequences = make([]IPv4AccessListSequences, 0)
		value.ForEach(func(k, v gjson.Result) bool {
			item := IPv4AccessListSequences{}
			if cValue := v.Get("sequence-number"); cValue.Exists() {
				item.SequenceNumber = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("remark"); cValue.Exists() {
				item.Remark = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.protocol"); cValue.Exists() {
				item.PermitProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.eq"); cValue.Exists() {
				item.PermitEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.igmp-type"); cValue.Exists() {
				item.PermitIgmpType = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.precedence"); cValue.Exists() {
				item.PermitPrecedence = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.fragment-type"); cValue.Exists() {
				item.PermitFragmentType = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.fragments"); cValue.Exists() {
				item.PermitFragments = types.BoolValue(true)
			} else {
				item.PermitFragments = types.BoolValue(false)
			}
			if cValue := v.Get("permit.counter"); cValue.Exists() {
				item.PermitCounter = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.default"); cValue.Exists() {
				item.PermitDefault = types.BoolValue(true)
			} else {
				item.PermitDefault = types.BoolValue(false)
			}
			if cValue := v.Get("permit.capture"); cValue.Exists() {
				item.PermitCapture = types.BoolValue(true)
			} else {
				item.PermitCapture = types.BoolValue(false)
			}
			if cValue := v.Get("permit.range.start-protocol"); cValue.Exists() {
				item.PermitRangeStartProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.range.end-protocol"); cValue.Exists() {
				item.PermitRangeEndProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.address"); cValue.Exists() {
				item.PermitSourceAddress = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.wildcard-mask"); cValue.Exists() {
				item.PermitSourceWildcardMask = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.prefix-length"); cValue.Exists() {
				item.PermitSourcePrefixLength = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.source.any"); cValue.Exists() {
				item.PermitSourceAny = types.BoolValue(true)
			} else {
				item.PermitSourceAny = types.BoolValue(false)
			}
			if cValue := v.Get("permit.source.host"); cValue.Exists() {
				item.PermitSourceHost = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.net-group"); cValue.Exists() {
				item.PermitSourceNetGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port-group"); cValue.Exists() {
				item.PermitSourcePortGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.eq"); cValue.Exists() {
				item.PermitSourcePortEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.gt"); cValue.Exists() {
				item.PermitSourcePortGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.lt"); cValue.Exists() {
				item.PermitSourcePortLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.neq"); cValue.Exists() {
				item.PermitSourcePortNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.range.start-value"); cValue.Exists() {
				item.PermitSourcePortRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.source.port.range.end-value"); cValue.Exists() {
				item.PermitSourcePortRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.address"); cValue.Exists() {
				item.PermitDestinationAddress = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.wildcard-mask"); cValue.Exists() {
				item.PermitDestinationWildcardMask = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.prefix-length"); cValue.Exists() {
				item.PermitDestinationPrefixLength = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.destination.any"); cValue.Exists() {
				item.PermitDestinationAny = types.BoolValue(true)
			} else {
				item.PermitDestinationAny = types.BoolValue(false)
			}
			if cValue := v.Get("permit.destination.host"); cValue.Exists() {
				item.PermitDestinationHost = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.net-group"); cValue.Exists() {
				item.PermitDestinationNetGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port-group"); cValue.Exists() {
				item.PermitDestinationPortGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.eq"); cValue.Exists() {
				item.PermitDestinationPortEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.gt"); cValue.Exists() {
				item.PermitDestinationPortGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.lt"); cValue.Exists() {
				item.PermitDestinationPortLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.neq"); cValue.Exists() {
				item.PermitDestinationPortNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.range.start-value"); cValue.Exists() {
				item.PermitDestinationPortRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.destination.port.range.end-value"); cValue.Exists() {
				item.PermitDestinationPortRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.icmp.message-type-name"); cValue.Exists() {
				item.PermitIcmpMessageTypeName = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.icmp.message-type"); cValue.Exists() {
				item.PermitIcmpMessageType = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.icmp.message-code"); cValue.Exists() {
				item.PermitIcmpMessageCode = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.dscp.dscp-value"); cValue.Exists() {
				item.PermitDscpDscpValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.eq"); cValue.Exists() {
				item.PermitDscpEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.gt"); cValue.Exists() {
				item.PermitDscpGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.lt"); cValue.Exists() {
				item.PermitDscpLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.neq"); cValue.Exists() {
				item.PermitDscpNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.range.start-value"); cValue.Exists() {
				item.PermitDscpRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.dscp.range.end-value"); cValue.Exists() {
				item.PermitDscpRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.packet-length.eq"); cValue.Exists() {
				item.PermitPacketLengthEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.packet-length.gt"); cValue.Exists() {
				item.PermitPacketLengthGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.packet-length.lt"); cValue.Exists() {
				item.PermitPacketLengthLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.packet-length.neq"); cValue.Exists() {
				item.PermitPacketLengthNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.packet-length.range.start-value"); cValue.Exists() {
				item.PermitPacketLengthRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.packet-length.range.end-value"); cValue.Exists() {
				item.PermitPacketLengthRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.eq"); cValue.Exists() {
				item.PermitTtlEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.gt"); cValue.Exists() {
				item.PermitTtlGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.lt"); cValue.Exists() {
				item.PermitTtlLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.neq"); cValue.Exists() {
				item.PermitTtlNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.range.start-value"); cValue.Exists() {
				item.PermitTtlRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.ttl.range.end-value"); cValue.Exists() {
				item.PermitTtlRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.eq"); cValue.Exists() {
				item.PermitFragmentOffsetEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.gt"); cValue.Exists() {
				item.PermitFragmentOffsetGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.lt"); cValue.Exists() {
				item.PermitFragmentOffsetLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.neq"); cValue.Exists() {
				item.PermitFragmentOffsetNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.range.start-value"); cValue.Exists() {
				item.PermitFragmentOffsetRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.fragment-offset.range.end-value"); cValue.Exists() {
				item.PermitFragmentOffsetRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.police.value"); cValue.Exists() {
				item.PermitPoliceValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.police.unit"); cValue.Exists() {
				item.PermitPoliceUnit = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.police.peak-rate"); cValue.Exists() {
				item.PermitPolicePeakRate = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.police.peak-unit"); cValue.Exists() {
				item.PermitPolicePeakUnit = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.police.priority"); cValue.Exists() {
				item.PermitPolicePriority = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop1.ipv4"); cValue.Exists() {
				item.PermitNexthop1Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop1.track"); cValue.Exists() {
				item.PermitNexthop1Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop1.vrf"); cValue.Exists() {
				item.PermitNexthop1Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop2.ipv4"); cValue.Exists() {
				item.PermitNexthop2Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop2.track"); cValue.Exists() {
				item.PermitNexthop2Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop2.vrf"); cValue.Exists() {
				item.PermitNexthop2Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop3.ipv4"); cValue.Exists() {
				item.PermitNexthop3Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop3.track"); cValue.Exists() {
				item.PermitNexthop3Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.nexthop3.vrf"); cValue.Exists() {
				item.PermitNexthop3Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("permit.log"); cValue.Exists() {
				item.PermitLog = types.BoolValue(true)
			} else {
				item.PermitLog = types.BoolValue(false)
			}
			if cValue := v.Get("permit.log-input"); cValue.Exists() {
				item.PermitLogInput = types.BoolValue(true)
			} else {
				item.PermitLogInput = types.BoolValue(false)
			}
			if cValue := v.Get("permit.set.qos-group"); cValue.Exists() {
				item.PermitSetQosGroup = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("permit.set.ttl"); cValue.Exists() {
				item.PermitSetTtl = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.eq"); cValue.Exists() {
				item.DenyEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.protocol"); cValue.Exists() {
				item.DenyProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.address"); cValue.Exists() {
				item.DenySourceAddress = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.wildcard-mask"); cValue.Exists() {
				item.DenySourceWildcardMask = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.prefix-length"); cValue.Exists() {
				item.DenySourcePrefixLength = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.source.any"); cValue.Exists() {
				item.DenySourceAny = types.BoolValue(true)
			} else {
				item.DenySourceAny = types.BoolValue(false)
			}
			if cValue := v.Get("deny.source.host"); cValue.Exists() {
				item.DenySourceHost = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.net-group"); cValue.Exists() {
				item.DenySourceNetGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port-group"); cValue.Exists() {
				item.DenySourcePortGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.eq"); cValue.Exists() {
				item.DenySourcePortEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.gt"); cValue.Exists() {
				item.DenySourcePortGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.lt"); cValue.Exists() {
				item.DenySourcePortLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.neq"); cValue.Exists() {
				item.DenySourcePortNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.range.start-value"); cValue.Exists() {
				item.DenySourcePortRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.source.port.range.end-value"); cValue.Exists() {
				item.DenySourcePortRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.address"); cValue.Exists() {
				item.DenyDestinationAddress = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.wildcard-mask"); cValue.Exists() {
				item.DenyDestinationWildcardMask = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.prefix-length"); cValue.Exists() {
				item.DenyDestinationPrefixLength = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.destination.any"); cValue.Exists() {
				item.DenyDestinationAny = types.BoolValue(true)
			} else {
				item.DenyDestinationAny = types.BoolValue(false)
			}
			if cValue := v.Get("deny.destination.host"); cValue.Exists() {
				item.DenyDestinationHost = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.net-group"); cValue.Exists() {
				item.DenyDestinationNetGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port-group"); cValue.Exists() {
				item.DenyDestinationPortGroup = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.eq"); cValue.Exists() {
				item.DenyDestinationPortEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.gt"); cValue.Exists() {
				item.DenyDestinationPortGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.lt"); cValue.Exists() {
				item.DenyDestinationPortLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.neq"); cValue.Exists() {
				item.DenyDestinationPortNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.range.start-value"); cValue.Exists() {
				item.DenyDestinationPortRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.destination.port.range.end-value"); cValue.Exists() {
				item.DenyDestinationPortRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.igmp-type"); cValue.Exists() {
				item.DenyIgmpType = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.precedence"); cValue.Exists() {
				item.DenyPrecedence = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.fragment-type"); cValue.Exists() {
				item.DenyFragmentType = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.fragments"); cValue.Exists() {
				item.DenyFragments = types.BoolValue(true)
			} else {
				item.DenyFragments = types.BoolValue(false)
			}
			if cValue := v.Get("deny.counter"); cValue.Exists() {
				item.DenyCounter = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.default"); cValue.Exists() {
				item.DenyDefault = types.BoolValue(true)
			} else {
				item.DenyDefault = types.BoolValue(false)
			}
			if cValue := v.Get("deny.capture"); cValue.Exists() {
				item.DenyCapture = types.BoolValue(true)
			} else {
				item.DenyCapture = types.BoolValue(false)
			}
			if cValue := v.Get("deny.icmp-off"); cValue.Exists() {
				item.DenyIcmpOff = types.BoolValue(true)
			} else {
				item.DenyIcmpOff = types.BoolValue(false)
			}
			if cValue := v.Get("deny.icmp-on"); cValue.Exists() {
				item.DenyIcmpOn = types.BoolValue(true)
			} else {
				item.DenyIcmpOn = types.BoolValue(false)
			}
			if cValue := v.Get("deny.range.start-protocol"); cValue.Exists() {
				item.DenyRangeStartProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.range.end-protocol"); cValue.Exists() {
				item.DenyRangeEndProtocol = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.icmp.message-type-name"); cValue.Exists() {
				item.DenyIcmpMessageTypeName = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.icmp.message-type"); cValue.Exists() {
				item.DenyIcmpMessageType = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.icmp.message-code"); cValue.Exists() {
				item.DenyIcmpMessageCode = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.dscp.dscp-value"); cValue.Exists() {
				item.DenyDscpDscpValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.eq"); cValue.Exists() {
				item.DenyDscpEq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.gt"); cValue.Exists() {
				item.DenyDscpGt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.lt"); cValue.Exists() {
				item.DenyDscpLt = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.neq"); cValue.Exists() {
				item.DenyDscpNeq = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.range.start-value"); cValue.Exists() {
				item.DenyDscpRangeStartValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.dscp.range.end-value"); cValue.Exists() {
				item.DenyDscpRangeEndValue = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.packet-length.eq"); cValue.Exists() {
				item.DenyPacketLengthEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.packet-length.gt"); cValue.Exists() {
				item.DenyPacketLengthGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.packet-length.lt"); cValue.Exists() {
				item.DenyPacketLengthLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.packet-length.neq"); cValue.Exists() {
				item.DenyPacketLengthNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.packet-length.range.start-value"); cValue.Exists() {
				item.DenyPacketLengthRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.packet-length.range.end-value"); cValue.Exists() {
				item.DenyPacketLengthRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.eq"); cValue.Exists() {
				item.DenyTtlEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.gt"); cValue.Exists() {
				item.DenyTtlGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.lt"); cValue.Exists() {
				item.DenyTtlLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.neq"); cValue.Exists() {
				item.DenyTtlNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.range.start-value"); cValue.Exists() {
				item.DenyTtlRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.ttl.range.end-value"); cValue.Exists() {
				item.DenyTtlRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.eq"); cValue.Exists() {
				item.DenyFragmentOffsetEq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.gt"); cValue.Exists() {
				item.DenyFragmentOffsetGt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.lt"); cValue.Exists() {
				item.DenyFragmentOffsetLt = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.neq"); cValue.Exists() {
				item.DenyFragmentOffsetNeq = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.range.start-value"); cValue.Exists() {
				item.DenyFragmentOffsetRangeStartValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.fragment-offset.range.end-value"); cValue.Exists() {
				item.DenyFragmentOffsetRangeEndValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.police.value"); cValue.Exists() {
				item.DenyPoliceValue = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.police.unit"); cValue.Exists() {
				item.DenyPoliceUnit = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.police.peak-rate"); cValue.Exists() {
				item.DenyPolicePeakRate = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.police.peak-unit"); cValue.Exists() {
				item.DenyPolicePeakUnit = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.police.priority"); cValue.Exists() {
				item.DenyPolicePriority = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop1.ipv4"); cValue.Exists() {
				item.DenyNexthop1Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop1.track"); cValue.Exists() {
				item.DenyNexthop1Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop1.vrf"); cValue.Exists() {
				item.DenyNexthop1Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop2.ipv4"); cValue.Exists() {
				item.DenyNexthop2Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop2.track"); cValue.Exists() {
				item.DenyNexthop2Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop2.vrf"); cValue.Exists() {
				item.DenyNexthop2Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop3.ipv4"); cValue.Exists() {
				item.DenyNexthop3Ipv4 = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop3.track"); cValue.Exists() {
				item.DenyNexthop3Track = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.nexthop3.vrf"); cValue.Exists() {
				item.DenyNexthop3Vrf = types.StringValue(cValue.String())
			}
			if cValue := v.Get("deny.log"); cValue.Exists() {
				item.DenyLog = types.BoolValue(true)
			} else {
				item.DenyLog = types.BoolValue(false)
			}
			if cValue := v.Get("deny.log-input"); cValue.Exists() {
				item.DenyLogInput = types.BoolValue(true)
			} else {
				item.DenyLogInput = types.BoolValue(false)
			}
			if cValue := v.Get("deny.set.qos-group"); cValue.Exists() {
				item.DenySetQosGroup = types.Int64Value(cValue.Int())
			}
			if cValue := v.Get("deny.set.ttl"); cValue.Exists() {
				item.DenySetTtl = types.Int64Value(cValue.Int())
			}
			data.Sequences = append(data.Sequences, item)
			return true
		})
	}
}

func (data *IPv4AccessList) getDeletedListItems(ctx context.Context, state IPv4AccessList) []string {
	deletedListItems := make([]string, 0)
	for i := range state.Sequences {
		keys := [...]string{"sequence-number"}
		stateKeyValues := [...]string{strconv.FormatInt(state.Sequences[i].SequenceNumber.ValueInt64(), 10)}

		emptyKeys := true
		if !reflect.ValueOf(state.Sequences[i].SequenceNumber.ValueInt64()).IsZero() {
			emptyKeys = false
		}
		if emptyKeys {
			continue
		}

		found := false
		for j := range data.Sequences {
			found = true
			if state.Sequences[i].SequenceNumber.ValueInt64() != data.Sequences[j].SequenceNumber.ValueInt64() {
				found = false
			}
			if found {
				break
			}
		}
		if !found {
			keyString := ""
			for ki := range keys {
				keyString += "[" + keys[ki] + "=" + stateKeyValues[ki] + "]"
			}
			deletedListItems = append(deletedListItems, fmt.Sprintf("%v/sequences/sequence%v", state.getPath(), keyString))
		}
	}
	return deletedListItems
}

func (data *IPv4AccessList) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)

	for i := range data.Sequences {
		keys := [...]string{"sequence-number"}
		keyValues := [...]string{strconv.FormatInt(data.Sequences[i].SequenceNumber.ValueInt64(), 10)}
		keyString := ""
		for ki := range keys {
			keyString += "[" + keys[ki] + "=" + keyValues[ki] + "]"
		}
		if !data.Sequences[i].PermitFragments.IsNull() && !data.Sequences[i].PermitFragments.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/fragments", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitDefault.IsNull() && !data.Sequences[i].PermitDefault.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/default", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitCapture.IsNull() && !data.Sequences[i].PermitCapture.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/capture", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitSourceAny.IsNull() && !data.Sequences[i].PermitSourceAny.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/source/any", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitDestinationAny.IsNull() && !data.Sequences[i].PermitDestinationAny.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/destination/any", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitLog.IsNull() && !data.Sequences[i].PermitLog.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/log", data.getPath(), keyString))
		}
		if !data.Sequences[i].PermitLogInput.IsNull() && !data.Sequences[i].PermitLogInput.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/permit/log-input", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenySourceAny.IsNull() && !data.Sequences[i].DenySourceAny.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/source/any", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyDestinationAny.IsNull() && !data.Sequences[i].DenyDestinationAny.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/destination/any", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyFragments.IsNull() && !data.Sequences[i].DenyFragments.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/fragments", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyDefault.IsNull() && !data.Sequences[i].DenyDefault.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/default", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyCapture.IsNull() && !data.Sequences[i].DenyCapture.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/capture", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyIcmpOff.IsNull() && !data.Sequences[i].DenyIcmpOff.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/icmp-off", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyIcmpOn.IsNull() && !data.Sequences[i].DenyIcmpOn.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/icmp-on", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyLog.IsNull() && !data.Sequences[i].DenyLog.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/log", data.getPath(), keyString))
		}
		if !data.Sequences[i].DenyLogInput.IsNull() && !data.Sequences[i].DenyLogInput.ValueBool() {
			emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/sequences/sequence%v/deny/log-input", data.getPath(), keyString))
		}
	}
	return emptyLeafsDelete
}
