// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/sjson"
)

type L2VPNBridgeGroup struct {
	Device     types.String `tfsdk:"device"`
	Id         types.String `tfsdk:"id"`
	DeleteMode types.String `tfsdk:"delete_mode"`
	GroupName  types.String `tfsdk:"group_name"`
}

type L2VPNBridgeGroupData struct {
	Device    types.String `tfsdk:"device"`
	Id        types.String `tfsdk:"id"`
	GroupName types.String `tfsdk:"group_name"`
}

func (data L2VPNBridgeGroup) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XR-um-l2vpn-cfg:/l2vpn/bridge/groups/group[group-name=%s]", data.GroupName.ValueString())
}

func (data L2VPNBridgeGroupData) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XR-um-l2vpn-cfg:/l2vpn/bridge/groups/group[group-name=%s]", data.GroupName.ValueString())
}

func (data L2VPNBridgeGroup) toBody(ctx context.Context) string {
	body := "{}"
	if !data.GroupName.IsNull() && !data.GroupName.IsUnknown() {
		body, _ = sjson.Set(body, "group-name", data.GroupName.ValueString())
	}
	return body
}

func (data *L2VPNBridgeGroup) updateFromBody(ctx context.Context, res []byte) {
}

func (data *L2VPNBridgeGroup) fromBody(ctx context.Context, res []byte) {
}

func (data *L2VPNBridgeGroupData) fromBody(ctx context.Context, res []byte) {
}

func (data *L2VPNBridgeGroup) getDeletedItems(ctx context.Context, state L2VPNBridgeGroup) []string {
	deletedItems := make([]string, 0)
	return deletedItems
}

func (data *L2VPNBridgeGroup) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}

func (data *L2VPNBridgeGroup) getDeletePaths(ctx context.Context) []string {
	var deletePaths []string
	return deletePaths
}
