// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type MPLSLDP struct {
	Device   types.String `tfsdk:"device"`
	Id       types.String `tfsdk:"id"`
	RouterId types.String `tfsdk:"router_id"`
}

func (data MPLSLDP) getPath() string {
	return "Cisco-IOS-XR-um-mpls-ldp-cfg:/mpls/ldp"
}

func (data MPLSLDP) toBody() string {
	body := "{}"
	if !data.RouterId.Null && !data.RouterId.Unknown {
		body, _ = sjson.Set(body, "router-id", data.RouterId.Value)
	}
	return body
}

func (data *MPLSLDP) updateFromBody(res []byte) {
	if value := gjson.GetBytes(res, "router-id"); value.Exists() {
		data.RouterId.Value = value.String()
	} else {
		data.RouterId.Null = true
	}
}

func (data *MPLSLDP) fromBody(res []byte) {
	if value := gjson.GetBytes(res, "router-id"); value.Exists() {
		data.RouterId.Value = value.String()
		data.RouterId.Null = false
	}
}

func (data *MPLSLDP) fromPlan(plan MPLSLDP) {
	data.Device = plan.Device
}

func (data *MPLSLDP) setUnknownValues() {
	if data.Device.Unknown {
		data.Device.Unknown = false
		data.Device.Null = true
	}
	if data.Id.Unknown {
		data.Id.Unknown = false
		data.Id.Null = true
	}
	if data.RouterId.Unknown {
		data.RouterId.Unknown = false
		data.RouterId.Null = true
	}
}

func (data *MPLSLDP) getDeletedListItems(state MPLSLDP) []string {
	deletedListItems := make([]string, 0)
	return deletedListItems
}

func (data *MPLSLDP) getEmptyLeafsDelete() []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}
