// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type SegmentRouting struct {
	Device                types.String `tfsdk:"device"`
	Id                    types.String `tfsdk:"id"`
	GlobalBlockLowerBound types.Int64  `tfsdk:"global_block_lower_bound"`
	GlobalBlockUpperBound types.Int64  `tfsdk:"global_block_upper_bound"`
	LocalBlockLowerBound  types.Int64  `tfsdk:"local_block_lower_bound"`
	LocalBlockUpperBound  types.Int64  `tfsdk:"local_block_upper_bound"`
}

func (data SegmentRouting) getPath() string {
	return "Cisco-IOS-XR-segment-routing-ms-cfg:/sr"
}

func (data SegmentRouting) toBody(ctx context.Context) string {
	body := "{}"
	if !data.GlobalBlockLowerBound.IsNull() && !data.GlobalBlockLowerBound.IsUnknown() {
		body, _ = sjson.Set(body, "global-block.lower-bound", strconv.FormatInt(data.GlobalBlockLowerBound.ValueInt64(), 10))
	}
	if !data.GlobalBlockUpperBound.IsNull() && !data.GlobalBlockUpperBound.IsUnknown() {
		body, _ = sjson.Set(body, "global-block.upper-bound", strconv.FormatInt(data.GlobalBlockUpperBound.ValueInt64(), 10))
	}
	if !data.LocalBlockLowerBound.IsNull() && !data.LocalBlockLowerBound.IsUnknown() {
		body, _ = sjson.Set(body, "local-block.lower-bound", strconv.FormatInt(data.LocalBlockLowerBound.ValueInt64(), 10))
	}
	if !data.LocalBlockUpperBound.IsNull() && !data.LocalBlockUpperBound.IsUnknown() {
		body, _ = sjson.Set(body, "local-block.upper-bound", strconv.FormatInt(data.LocalBlockUpperBound.ValueInt64(), 10))
	}
	return body
}

func (data *SegmentRouting) updateFromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "global-block.lower-bound"); value.Exists() && !data.GlobalBlockLowerBound.IsNull() {
		data.GlobalBlockLowerBound = types.Int64Value(value.Int())
	} else {
		data.GlobalBlockLowerBound = types.Int64Null()
	}
	if value := gjson.GetBytes(res, "global-block.upper-bound"); value.Exists() && !data.GlobalBlockUpperBound.IsNull() {
		data.GlobalBlockUpperBound = types.Int64Value(value.Int())
	} else {
		data.GlobalBlockUpperBound = types.Int64Null()
	}
	if value := gjson.GetBytes(res, "local-block.lower-bound"); value.Exists() && !data.LocalBlockLowerBound.IsNull() {
		data.LocalBlockLowerBound = types.Int64Value(value.Int())
	} else {
		data.LocalBlockLowerBound = types.Int64Null()
	}
	if value := gjson.GetBytes(res, "local-block.upper-bound"); value.Exists() && !data.LocalBlockUpperBound.IsNull() {
		data.LocalBlockUpperBound = types.Int64Value(value.Int())
	} else {
		data.LocalBlockUpperBound = types.Int64Null()
	}
}

func (data *SegmentRouting) fromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "global-block.lower-bound"); value.Exists() {
		data.GlobalBlockLowerBound = types.Int64Value(value.Int())
	}
	if value := gjson.GetBytes(res, "global-block.upper-bound"); value.Exists() {
		data.GlobalBlockUpperBound = types.Int64Value(value.Int())
	}
	if value := gjson.GetBytes(res, "local-block.lower-bound"); value.Exists() {
		data.LocalBlockLowerBound = types.Int64Value(value.Int())
	}
	if value := gjson.GetBytes(res, "local-block.upper-bound"); value.Exists() {
		data.LocalBlockUpperBound = types.Int64Value(value.Int())
	}
}

func (data *SegmentRouting) getDeletedListItems(ctx context.Context, state SegmentRouting) []string {
	deletedListItems := make([]string, 0)
	return deletedListItems
}

func (data *SegmentRouting) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}
