// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type SNMPServerMIB struct {
	Device           types.String `tfsdk:"device"`
	Id               types.String `tfsdk:"id"`
	IfmibIfaliasLong types.Bool   `tfsdk:"ifmib_ifalias_long"`
	IfindexPersist   types.Bool   `tfsdk:"ifindex_persist"`
}

func (data SNMPServerMIB) getPath() string {
	return "Cisco-IOS-XR-um-snmp-server-cfg:/snmp-server-mibs"
}

func (data SNMPServerMIB) toBody(ctx context.Context) string {
	body := "{}"
	if !data.IfmibIfaliasLong.IsNull() && !data.IfmibIfaliasLong.IsUnknown() {
		if data.IfmibIfaliasLong.ValueBool() {
			body, _ = sjson.Set(body, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifmib.ifalias.long", map[string]string{})
		}
	}
	if !data.IfindexPersist.IsNull() && !data.IfindexPersist.IsUnknown() {
		if data.IfindexPersist.ValueBool() {
			body, _ = sjson.Set(body, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifindex.persist", map[string]string{})
		}
	}
	return body
}

func (data *SNMPServerMIB) updateFromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifmib.ifalias.long"); !data.IfmibIfaliasLong.IsNull() {
		if value.Exists() {
			data.IfmibIfaliasLong = types.BoolValue(true)
		} else {
			data.IfmibIfaliasLong = types.BoolValue(false)
		}
	} else {
		data.IfmibIfaliasLong = types.BoolNull()
	}
	if value := gjson.GetBytes(res, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifindex.persist"); !data.IfindexPersist.IsNull() {
		if value.Exists() {
			data.IfindexPersist = types.BoolValue(true)
		} else {
			data.IfindexPersist = types.BoolValue(false)
		}
	} else {
		data.IfindexPersist = types.BoolNull()
	}
}

func (data *SNMPServerMIB) fromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifmib.ifalias.long"); value.Exists() {
		data.IfmibIfaliasLong = types.BoolValue(true)
	} else {
		data.IfmibIfaliasLong = types.BoolValue(false)
	}
	if value := gjson.GetBytes(res, "Cisco-IOS-XR-um-mibs-ifmib-cfg:ifindex.persist"); value.Exists() {
		data.IfindexPersist = types.BoolValue(true)
	} else {
		data.IfindexPersist = types.BoolValue(false)
	}
}

func (data *SNMPServerMIB) fromPlan(ctx context.Context, plan SNMPServerMIB) {
	data.Device = plan.Device
}

func (data *SNMPServerMIB) getDeletedListItems(ctx context.Context, state SNMPServerMIB) []string {
	deletedListItems := make([]string, 0)
	return deletedListItems
}

func (data *SNMPServerMIB) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}
