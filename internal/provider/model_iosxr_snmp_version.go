// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type SNMPVersion struct {
	Device                 types.String `tfsdk:"device"`
	Id                     types.String `tfsdk:"id"`
	VersionV3SecurityLevel types.String `tfsdk:"version_v3_security_level"`
}

func (data SNMPVersion) getPath() string {
	return "Cisco-IOS-XR-um-snmp-server-cfg:snmp-server/vrfs/vrf[vrf-name-%s]/hosts/host[address=%s]/traps/unencrypted/unencrypted-string[community-string=%s]"
}

func (data SNMPVersion) toBody(ctx context.Context) string {
	body := "{}"
	if !data.VersionV3SecurityLevel.IsNull() && !data.VersionV3SecurityLevel.IsUnknown() {
		body, _ = sjson.Set(body, "version.v3.security-level", data.VersionV3SecurityLevel.ValueString())
	}
	return body
}

func (data *SNMPVersion) updateFromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "version.v3.security-level"); value.Exists() && !data.VersionV3SecurityLevel.IsNull() {
		data.VersionV3SecurityLevel = types.StringValue(value.String())
	} else {
		data.VersionV3SecurityLevel = types.StringNull()
	}
}

func (data *SNMPVersion) fromBody(ctx context.Context, res []byte) {
	if value := gjson.GetBytes(res, "version.v3.security-level"); value.Exists() {
		data.VersionV3SecurityLevel = types.StringValue(value.String())
	}
}

func (data *SNMPVersion) fromPlan(ctx context.Context, plan SNMPVersion) {
	data.Device = plan.Device
}

func (data *SNMPVersion) getDeletedListItems(ctx context.Context, state SNMPVersion) []string {
	deletedListItems := make([]string, 0)
	return deletedListItems
}

func (data *SNMPVersion) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}
