// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/sjson"
)

type SNMPVRF struct {
	Device  types.String `tfsdk:"device"`
	Id      types.String `tfsdk:"id"`
	VrfName types.String `tfsdk:"vrf_name"`
	Address types.String `tfsdk:"address"`
}

func (data SNMPVRF) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XR-um-snmp-server-cfg:snmp-server/vrfs/vrf[vrf-name-%s]/hosts/host[address=%s]", data.VrfName.ValueString(), data.Address.ValueString())
}

func (data SNMPVRF) toBody(ctx context.Context) string {
	body := "{}"
	if !data.Address.IsNull() && !data.Address.IsUnknown() {
		body, _ = sjson.Set(body, "address", data.Address.ValueString())
	}
	return body
}

func (data *SNMPVRF) updateFromBody(ctx context.Context, res []byte) {
}

func (data *SNMPVRF) fromBody(ctx context.Context, res []byte) {
}

func (data *SNMPVRF) fromPlan(ctx context.Context, plan SNMPVRF) {
	data.Device = plan.Device
	data.VrfName = types.StringValue(plan.VrfName.ValueString())
	data.Address = types.StringValue(plan.Address.ValueString())
}

func (data *SNMPVRF) getDeletedListItems(ctx context.Context, state SNMPVRF) []string {
	deletedListItems := make([]string, 0)
	return deletedListItems
}

func (data *SNMPVRF) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	return emptyLeafsDelete
}
