// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxrEVPNGroup(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_evpn_group.test", "group_id", "1"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_evpn_group.test", "core_interfaces.0.interface_name", "Bundle-Ether111"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrEVPNGroupConfig_minimum(),
			},
			{
				Config: testAccIosxrEVPNGroupConfig_all(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
			{
				ResourceName:  "iosxr_evpn_group.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-l2vpn-cfg:/evpn/groups/group[group-name=1]",
			},
		},
	})
}

func testAccIosxrEVPNGroupConfig_minimum() string {
	config := `resource "iosxr_evpn_group" "test" {` + "\n"
	config += `	group_id = 1` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxrEVPNGroupConfig_all() string {
	config := `resource "iosxr_evpn_group" "test" {` + "\n"
	config += `	group_id = 1` + "\n"
	config += `	core_interfaces = [{` + "\n"
	config += `		interface_name = "Bundle-Ether111"` + "\n"
	config += `	}]` + "\n"
	config += `}` + "\n"
	return config
}
