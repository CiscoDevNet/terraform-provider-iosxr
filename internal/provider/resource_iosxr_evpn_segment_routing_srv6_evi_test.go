// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrEVPNSegmentRoutingSRv6EVI(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrEVPNSegmentRoutingSRv6EVIConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "vpn_id", "1235"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "description", "My Description"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "bgp_route_target_import_two_byte_as_format.0.as_number", "1"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "bgp_route_target_import_two_byte_as_format.0.assigned_number", "1"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "bgp_route_target_export_ipv4_address_format.0.ipv4_address", "1.1.1.1"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "bgp_route_target_export_ipv4_address_format.0.assigned_number", "1"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "advertise_mac", "true"),
					resource.TestCheckResourceAttr("iosxr_evpn_segment_routing_srv6_evi.test", "locator", "LOC12"),
				),
			},
			{
				ResourceName:  "iosxr_evpn_segment_routing_srv6_evi.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-l2vpn-cfg:/evpn/evis/segment-routing/srv6/evi[vpn-id=1235]",
			},
		},
	})
}

func testAccIosxrEVPNSegmentRoutingSRv6EVIConfig_minimum() string {
	return `
	resource "iosxr_evpn_segment_routing_srv6_evi" "test" {
		vpn_id = 1235
	}
	`
}

func testAccIosxrEVPNSegmentRoutingSRv6EVIConfig_all() string {
	return `
	resource "iosxr_evpn_segment_routing_srv6_evi" "test" {
		vpn_id = 1235
		description = "My Description"
		bgp_route_target_import_two_byte_as_format = [{
			as_number = 1
			assigned_number = 1
		}]
		bgp_route_target_export_ipv4_address_format = [{
			ipv4_address = "1.1.1.1"
			assigned_number = 1
		}]
		advertise_mac = true
		locator = "LOC12"
	}
	`
}
