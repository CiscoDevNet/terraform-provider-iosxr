// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxrExtcommunityCostSet(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_extcommunity_cost_set.test", "set_name", "COST2"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_extcommunity_cost_set.test", "rpl", "extcommunity-set cost COST2\nend-set\n"))
	var steps []resource.TestStep
	if os.Getenv("SKIP_MINIMUM_TEST") == "" {
		steps = append(steps, resource.TestStep{
			Config: testAccIosxrExtcommunityCostSetConfig_minimum(),
		})
	}
	steps = append(steps, resource.TestStep{
		Config: testAccIosxrExtcommunityCostSetConfig_all(),
		Check:  resource.ComposeTestCheckFunc(checks...),
	})
	steps = append(steps, resource.TestStep{
		ResourceName:  "iosxr_extcommunity_cost_set.test",
		ImportState:   true,
		ImportStateId: "Cisco-IOS-XR-um-route-policy-cfg:/routing-policy/sets/extended-community-cost-sets/extended-community-cost-set[set-name=COST2]",
	})
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps:                    steps,
	})
}

func testAccIosxrExtcommunityCostSetConfig_minimum() string {
	config := `resource "iosxr_extcommunity_cost_set" "test" {` + "\n"
	config += `	set_name = "COST2"` + "\n"
	config += `	rpl = "extcommunity-set cost COST2\nend-set\n"` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxrExtcommunityCostSetConfig_all() string {
	config := `resource "iosxr_extcommunity_cost_set" "test" {` + "\n"
	config += `	set_name = "COST2"` + "\n"
	config += `	rpl = "extcommunity-set cost COST2\nend-set\n"` + "\n"
	config += `}` + "\n"
	return config
}
