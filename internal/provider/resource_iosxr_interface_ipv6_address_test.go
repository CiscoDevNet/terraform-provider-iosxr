// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrInterfaceIPv6Address(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrInterfaceIPv6AddressConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_interface_ipv6_address.test", "address", "2001::1"),
					resource.TestCheckResourceAttr("iosxr_interface_ipv6_address.test", "prefix_length", "64"),
					resource.TestCheckResourceAttr("iosxr_interface_ipv6_address.test", "zone", "0"),
				),
			},
			{
				ResourceName:  "iosxr_interface_ipv6_address.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-interface-cfg:/interfaces/interface[interface-name=GigabitEthernet0/0/0/1]/ipv6/Cisco-IOS-XR-um-if-ip-address-cfg:addresses/Cisco-IOS-XR-um-if-ip-address-cfg:ipv6-address[address=2001::1]",
			},
		},
	})
}

func testAccIosxrInterfaceIPv6AddressConfig_minimum() string {
	return `
	resource "iosxr_interface_ipv6_address" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
		address = "2001::1"
		prefix_length = 64
	}
	`
}

func testAccIosxrInterfaceIPv6AddressConfig_all() string {
	return `
	resource "iosxr_interface_ipv6_address" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
		address = "2001::1"
		prefix_length = 64
		zone = "0"
	}
	`
}
