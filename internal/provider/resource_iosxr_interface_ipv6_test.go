// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrInterfaceIPv6(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrInterfaceIPv6Config_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_interface_ipv6.test", "link_local_address", "fe80::1"),
					resource.TestCheckResourceAttr("iosxr_interface_ipv6.test", "link_local_zone", "0"),
					resource.TestCheckResourceAttr("iosxr_interface_ipv6.test", "autoconfig", "false"),
					resource.TestCheckResourceAttr("iosxr_interface_ipv6.test", "enable", "true"),
				),
			},
			{
				ResourceName:  "iosxr_interface_ipv6.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-interface-cfg:/interfaces/interface[interface-name=GigabitEthernet0/0/0/1]/ipv6",
			},
		},
	})
}

func testAccIosxrInterfaceIPv6Config_minimum() string {
	return `
	resource "iosxr_interface_ipv6" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
		link_local_address = "fe80::1"
	}
	`
}

func testAccIosxrInterfaceIPv6Config_all() string {
	return `
	resource "iosxr_interface_ipv6" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
		link_local_address = "fe80::1"
		link_local_zone = "0"
		autoconfig = false
		enable = true
	}
	`
}
