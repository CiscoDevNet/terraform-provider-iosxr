// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrInterface(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrInterfaceConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_interface.test", "interface_name", "GigabitEthernet0/0/0/1"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "l2transport", "false"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "point_to_point", "false"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "multipoint", "false"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "shutdown", "true"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "mtu", "9000"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "bandwidth", "100000"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "description", "My Interface Description"),
					resource.TestCheckResourceAttr("iosxr_interface.test", "vrf", "VRF1"),
				),
			},
			{
				ResourceName:  "iosxr_interface.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-interface-cfg:/interfaces/interface[interface-name=GigabitEthernet0/0/0/1]",
			},
		},
	})
}

func testAccIosxrInterfaceConfig_minimum() string {
	return `
	resource "iosxr_interface" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
	}
	`
}

func testAccIosxrInterfaceConfig_all() string {
	return `
	resource "iosxr_interface" "test" {
		interface_name = "GigabitEthernet0/0/0/1"
		l2transport = false
		point_to_point = false
		multipoint = false
		shutdown = true
		mtu = 9000
		bandwidth = 100000
		description = "My Interface Description"
		vrf = "VRF1"
	}
	`
}
