// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrIPv4AccessList(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrIPv4AccessListConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "access_list_name", "ACCESS1"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.sequence_number", "11"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_protocol", "tcp"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_source_address", "18.0.0.0"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_source_wildcard_mask", "0.255.255.255"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_source_port_range_start", "100"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_source_port_range_end", "200"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_destination_host", "11.1.1.1"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_destination_port_eq", "300"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_dscp", "cs1"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_ttl_eq", "10"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_nexthop1_ipv4", "1.2.3.4"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_nexthop2_ipv4", "3.4.5.6"),
					resource.TestCheckResourceAttr("iosxr_ipv4_access_list.test", "sequences.0.permit_log", "true"),
				),
			},
			{
				ResourceName:  "iosxr_ipv4_access_list.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-ipv4-access-list-cfg:/ipv4/access-lists/access-list[access-list-name=ACCESS1]",
			},
		},
	})
}

func testAccIosxrIPv4AccessListConfig_minimum() string {
	return `
	resource "iosxr_ipv4_access_list" "test" {
		access_list_name = "ACCESS1"
	}
	`
}

func testAccIosxrIPv4AccessListConfig_all() string {
	return `
	resource "iosxr_ipv4_access_list" "test" {
		access_list_name = "ACCESS1"
		sequences = [{
			sequence_number = 11
			permit_protocol = "tcp"
			permit_source_address = "18.0.0.0"
			permit_source_wildcard_mask = "0.255.255.255"
			permit_source_port_range_start = "100"
			permit_source_port_range_end = "200"
			permit_destination_host = "11.1.1.1"
			permit_destination_port_eq = "300"
			permit_dscp = "cs1"
			permit_ttl_eq = 10
			permit_nexthop1_ipv4 = "1.2.3.4"
			permit_nexthop2_ipv4 = "3.4.5.6"
			permit_log = true
		}]
	}
	`
}
