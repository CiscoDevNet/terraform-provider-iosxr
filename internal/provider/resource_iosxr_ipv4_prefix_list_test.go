// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrIPv4PrefixList(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrIPv4PrefixListConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "prefix_list_name", "LIST1"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.sequence_number", "4096"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.remark", "REMARK"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.permission", "deny"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.prefix", "10.1.1.1"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.mask", "255.255.0.0"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.match_prefix_length_eq", "12"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.match_prefix_length_ge", "22"),
					resource.TestCheckResourceAttr("iosxr_ipv4_prefix_list.test", "sequences.0.match_prefix_length_le", "32"),
				),
			},
			{
				ResourceName:  "iosxr_ipv4_prefix_list.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-ipv4-prefix-list-cfg:/ipv4/prefix-lists/prefix-list[prefix-list-name=LIST1]",
			},
		},
	})
}

func testAccIosxrIPv4PrefixListConfig_minimum() string {
	return `
	resource "iosxr_ipv4_prefix_list" "test" {
		prefix_list_name = "LIST1"
	}
	`
}

func testAccIosxrIPv4PrefixListConfig_all() string {
	return `
	resource "iosxr_ipv4_prefix_list" "test" {
		prefix_list_name = "LIST1"
		sequences = [{
			sequence_number = 4096
			remark = "REMARK"
			permission = "deny"
			prefix = "10.1.1.1"
			mask = "255.255.0.0"
			match_prefix_length_eq = 12
			match_prefix_length_ge = 22
			match_prefix_length_le = 32
		}]
	}
	`
}
