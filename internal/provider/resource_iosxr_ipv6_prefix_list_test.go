// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrIPv6PrefixList(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrIPv6PrefixListConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "prefix_list_name", "LIST1"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.sequence_number", "4096"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.remark", "REMARK"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.permission", "permit"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.prefix", "2001:db8:3333:4444:5555:6666:7777:8888"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.mask", "64"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.match_prefix_length_eq", "10"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.match_prefix_length_ge", "20"),
					resource.TestCheckResourceAttr("iosxr_ipv6_prefix_list.test", "sequences.0.match_prefix_length_le", "20"),
				),
			},
			{
				ResourceName:  "iosxr_ipv6_prefix_list.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-ipv6-prefix-list-cfg:/ipv6/prefix-lists/prefix-list[prefix-list-name=LIST1]",
			},
		},
	})
}

func testAccIosxrIPv6PrefixListConfig_minimum() string {
	return `
	resource "iosxr_ipv6_prefix_list" "test" {
		prefix_list_name = "LIST1"
	}
	`
}

func testAccIosxrIPv6PrefixListConfig_all() string {
	return `
	resource "iosxr_ipv6_prefix_list" "test" {
		prefix_list_name = "LIST1"
		sequences = [{
			sequence_number = 4096
			remark = "REMARK"
			permission = "permit"
			prefix = "2001:db8:3333:4444:5555:6666:7777:8888"
			mask = 64
			match_prefix_length_eq = 10
			match_prefix_length_ge = 20
			match_prefix_length_le = 20
		}]
	}
	`
}
