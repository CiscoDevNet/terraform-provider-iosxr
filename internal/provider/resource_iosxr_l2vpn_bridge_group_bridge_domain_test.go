// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrL2VPNBridgeGroupBridgeDomain(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrL2VPNBridgeGroupBridgeDomainConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_l2vpn_bridge_group_bridge_domain.test", "bridge_domain_name", "BD123"),
					resource.TestCheckResourceAttr("iosxr_l2vpn_bridge_group_bridge_domain.test", "evis.0.vpn_id", "1234"),
					resource.TestCheckResourceAttr("iosxr_l2vpn_bridge_group_bridge_domain.test", "vnis.0.vni_id", "1234"),
				),
			},
			{
				ResourceName:  "iosxr_l2vpn_bridge_group_bridge_domain.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-l2vpn-cfg:/l2vpn/bridge/groups/group[group-name=BG123]/bridge-domains/bridge-domain[bridge-domain-name=BD123]",
			},
		},
	})
}

func testAccIosxrL2VPNBridgeGroupBridgeDomainConfig_minimum() string {
	return `
	resource "iosxr_l2vpn_bridge_group_bridge_domain" "test" {
		bridge_group_name = "BG123"
		bridge_domain_name = "BD123"
	}
	`
}

func testAccIosxrL2VPNBridgeGroupBridgeDomainConfig_all() string {
	return `
	resource "iosxr_l2vpn_bridge_group_bridge_domain" "test" {
		bridge_group_name = "BG123"
		bridge_domain_name = "BD123"
		evis = [{
			vpn_id = 1234
		}]
		vnis = [{
			vni_id = 1234
		}]
	}
	`
}
