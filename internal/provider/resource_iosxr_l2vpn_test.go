// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxrL2VPN(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_l2vpn.test", "description", "My L2VPN Description"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_l2vpn.test", "router_id", "1.2.3.4"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_l2vpn.test", "xconnect_groups.0.group_name", "P2P"))
	var steps []resource.TestStep
	if os.Getenv("SKIP_MINIMUM_TEST") == "" {
		steps = append(steps, resource.TestStep{
			Config: testAccIosxrL2VPNConfig_minimum(),
		})
	}
	steps = append(steps, resource.TestStep{
		Config: testAccIosxrL2VPNConfig_all(),
		Check:  resource.ComposeTestCheckFunc(checks...),
	})
	steps = append(steps, resource.TestStep{
		ResourceName:  "iosxr_l2vpn.test",
		ImportState:   true,
		ImportStateId: "Cisco-IOS-XR-um-l2vpn-cfg:/l2vpn",
	})
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps:                    steps,
	})
}

func testAccIosxrL2VPNConfig_minimum() string {
	config := `resource "iosxr_l2vpn" "test" {` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxrL2VPNConfig_all() string {
	config := `resource "iosxr_l2vpn" "test" {` + "\n"
	config += `	description = "My L2VPN Description"` + "\n"
	config += `	router_id = "1.2.3.4"` + "\n"
	config += `	xconnect_groups = [{` + "\n"
	config += `		group_name = "P2P"` + "\n"
	config += `	}]` + "\n"
	config += `}` + "\n"
	return config
}
