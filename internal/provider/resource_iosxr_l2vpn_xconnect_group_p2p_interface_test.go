// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrL2VPNXconnectGroupP2PInterface(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrL2VPNXconnectGroupP2PInterfaceConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_l2vpn_xconnect_group_p2p_interface.test", "interface_name", "GigabitEthernet0/0/0/2"),
				),
			},
			{
				ResourceName:  "iosxr_l2vpn_xconnect_group_p2p_interface.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-l2vpn-cfg:/l2vpn/xconnect/groups/group[group-name=P2P]/p2ps/p2p[p2p-xconnect-name=XC]/interfaces/interface[interface-name=GigabitEthernet0/0/0/2]",
			},
		},
	})
}

func testAccIosxrL2VPNXconnectGroupP2PInterfaceConfig_minimum() string {
	return `
	resource "iosxr_l2vpn_xconnect_group_p2p_interface" "test" {
		group_name = "P2P"
		p2p_xconnect_name = "XC"
		interface_name = "GigabitEthernet0/0/0/2"
	}
	`
}

func testAccIosxrL2VPNXconnectGroupP2PInterfaceConfig_all() string {
	return `
	resource "iosxr_l2vpn_xconnect_group_p2p_interface" "test" {
		group_name = "P2P"
		p2p_xconnect_name = "XC"
		interface_name = "GigabitEthernet0/0/0/2"
	}
	`
}
