// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxrLACP(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_lacp.test", "mac", "00:11:00:11:00:11"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_lacp.test", "priority", "1"))
	var steps []resource.TestStep
	if os.Getenv("SKIP_MINIMUM_TEST") == "" {
		steps = append(steps, resource.TestStep{
			Config: testAccIosxrLACPConfig_minimum(),
		})
	}
	steps = append(steps, resource.TestStep{
		Config: testAccIosxrLACPConfig_all(),
		Check:  resource.ComposeTestCheckFunc(checks...),
	})
	steps = append(steps, resource.TestStep{
		ResourceName:  "iosxr_lacp.test",
		ImportState:   true,
		ImportStateId: "Cisco-IOS-XR-um-lacp-cfg:/lacp/system",
	})
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps:                    steps,
	})
}

func testAccIosxrLACPConfig_minimum() string {
	config := `resource "iosxr_lacp" "test" {` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxrLACPConfig_all() string {
	config := `resource "iosxr_lacp" "test" {` + "\n"
	config += `	mac = "00:11:00:11:00:11"` + "\n"
	config += `	priority = 1` + "\n"
	config += `}` + "\n"
	return config
}
