// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrPrefixSet(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrPrefixSetConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_prefix_set.test", "set_name", "PREFIX_SET_1"),
					resource.TestCheckResourceAttr("iosxr_prefix_set.test", "rpl", "prefix-set PREFIX_SET_1\n  10.1.1.0/26 ge 26,\n  10.1.2.0/26 ge 26\nend-set\n"),
				),
			},
			{
				ResourceName:  "iosxr_prefix_set.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-route-policy-cfg:/routing-policy/sets/prefix-sets/prefix-set[set-name=PREFIX_SET_1]",
			},
		},
	})
}

func testAccIosxrPrefixSetConfig_minimum() string {
	return `
	resource "iosxr_prefix_set" "test" {
		set_name = "PREFIX_SET_1"
		rpl = "prefix-set PREFIX_SET_1\n  10.1.1.0/26 ge 26,\n  10.1.2.0/26 ge 26\nend-set\n"
	}
	`
}

func testAccIosxrPrefixSetConfig_all() string {
	return `
	resource "iosxr_prefix_set" "test" {
		set_name = "PREFIX_SET_1"
		rpl = "prefix-set PREFIX_SET_1\n  10.1.1.0/26 ge 26,\n  10.1.2.0/26 ge 26\nend-set\n"
	}
	`
}
