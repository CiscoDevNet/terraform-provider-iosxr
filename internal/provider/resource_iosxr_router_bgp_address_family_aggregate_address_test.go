// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrRouterBGPAddressFamilyAggregateAddress(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrRouterBGPAddressFamilyAggregateAddressConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_router_bgp_address_family_aggregate_address.test", "address", "10.0.0.0"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_address_family_aggregate_address.test", "masklength", "8"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_address_family_aggregate_address.test", "as_set", "false"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_address_family_aggregate_address.test", "as_confed_set", "false"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_address_family_aggregate_address.test", "summary_only", "false"),
				),
			},
			{
				ResourceName:  "iosxr_router_bgp_address_family_aggregate_address.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-router-bgp-cfg:/router/bgp/as[as-number=65001]/address-families/address-family[af-name=ipv4-unicast]/aggregate-addresses/aggregate-address[address=10.0.0.0][masklength=8]",
			},
		},
	})
}

func testAccIosxrRouterBGPAddressFamilyAggregateAddressConfig_minimum() string {
	return `
	resource "iosxr_router_bgp_address_family_aggregate_address" "test" {
		as_number = "65001"
		af_name = "ipv4-unicast"
		address = "10.0.0.0"
		masklength = 8
	}
	`
}

func testAccIosxrRouterBGPAddressFamilyAggregateAddressConfig_all() string {
	return `
	resource "iosxr_router_bgp_address_family_aggregate_address" "test" {
		as_number = "65001"
		af_name = "ipv4-unicast"
		address = "10.0.0.0"
		masklength = 8
		as_set = false
		as_confed_set = false
		summary_only = false
	}
	`
}
