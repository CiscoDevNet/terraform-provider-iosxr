// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrRouterBGPNeighborGroup(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrRouterBGPNeighborGroupConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_router_bgp_neighbor_group.test", "name", "GROUP1"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_neighbor_group.test", "remote_as", "65001"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_neighbor_group.test", "update_source", "Loopback0"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_neighbor_group.test", "address_families.0.af_name", "ipv4-labeled-unicast"),
					resource.TestCheckResourceAttr("iosxr_router_bgp_neighbor_group.test", "address_families.0.soft_reconfiguration_inbound_always", "true"),
				),
			},
			{
				ResourceName:  "iosxr_router_bgp_neighbor_group.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-router-bgp-cfg:/router/bgp/as[as-number=65001]/neighbor-groups/neighbor-group[neighbor-group-name=GROUP1]",
			},
		},
	})
}

func testAccIosxrRouterBGPNeighborGroupConfig_minimum() string {
	return `
	resource "iosxr_router_bgp_neighbor_group" "test" {
		as_number = "65001"
		name = "GROUP1"
	}
	`
}

func testAccIosxrRouterBGPNeighborGroupConfig_all() string {
	return `
	resource "iosxr_router_bgp_neighbor_group" "test" {
		as_number = "65001"
		name = "GROUP1"
		remote_as = "65001"
		update_source = "Loopback0"
		address_families = [{
			af_name = "ipv4-labeled-unicast"
			soft_reconfiguration_inbound_always = true
		}]
	}
	`
}
