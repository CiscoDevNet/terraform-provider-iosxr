// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrRouterOSPFRedistributeOSPF(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrRouterOSPFRedistributeOSPFConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "instance_name", "OSPF2"),
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "match_internal", "true"),
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "match_external", "false"),
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "match_nssa_external", "false"),
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "tag", "4"),
					resource.TestCheckResourceAttr("iosxr_router_ospf_redistribute_ospf.test", "metric_type", "1"),
				),
			},
			{
				ResourceName:  "iosxr_router_ospf_redistribute_ospf.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-router-ospf-cfg:/router/ospf/processes/process[process-name=OSPF1]/redistribute/ospf[instance-name=OSPF2]",
			},
		},
	})
}

func testAccIosxrRouterOSPFRedistributeOSPFConfig_minimum() string {
	return `
	resource "iosxr_router_ospf_redistribute_ospf" "test" {
		process_name = "OSPF1"
		instance_name = "OSPF2"
	}
	`
}

func testAccIosxrRouterOSPFRedistributeOSPFConfig_all() string {
	return `
	resource "iosxr_router_ospf_redistribute_ospf" "test" {
		process_name = "OSPF1"
		instance_name = "OSPF2"
		match_internal = true
		match_external = false
		match_nssa_external = false
		tag = 4
		metric_type = "1"
	}
	`
}
