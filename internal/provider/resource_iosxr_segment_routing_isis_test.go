// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrSegmentRoutingISIS(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrSegmentRoutingISISConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "af_name", "ipv6"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "saf_name", "unicast"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "metric_style_wide", "true"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "microloop_avoidance_segment_routing", "true"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "router_id_interface_name", "Loopback0"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "locators.0.locator_name", "AlgoLocator"),
					resource.TestCheckResourceAttr("iosxr_segment_routing_isis.test", "locators.0.level", "1"),
				),
			},
			{
				ResourceName:  "iosxr_segment_routing_isis.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-router-isis-cfg:/router/isis/processes/process[process-id=P1]/address-families/address-family[af-name=ipv6][saf-name=unicast]",
			},
		},
	})
}

func testAccIosxrSegmentRoutingISISConfig_minimum() string {
	return `
	resource "iosxr_segment_routing_isis" "test" {
		process_id = "P1"
		af_name = "ipv6"
		saf_name = "unicast"
	}
	`
}

func testAccIosxrSegmentRoutingISISConfig_all() string {
	return `
	resource "iosxr_segment_routing_isis" "test" {
		process_id = "P1"
		af_name = "ipv6"
		saf_name = "unicast"
		metric_style_wide = true
		microloop_avoidance_segment_routing = true
		router_id_interface_name = "Loopback0"
		locators = [{
			locator_name = "AlgoLocator"
			level = 1
		}]
	}
	`
}
