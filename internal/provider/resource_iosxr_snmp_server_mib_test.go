// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxrSNMPServerMIB(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_snmp_server_mib.test", "ifmib_ifalias_long", "true"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxr_snmp_server_mib.test", "ifindex_persist", "true"))
	var steps []resource.TestStep
	if os.Getenv("SKIP_MINIMUM_TEST") == "" {
		steps = append(steps, resource.TestStep{
			Config: testAccIosxrSNMPServerMIBConfig_minimum(),
		})
	}
	steps = append(steps, resource.TestStep{
		Config: testAccIosxrSNMPServerMIBConfig_all(),
		Check:  resource.ComposeTestCheckFunc(checks...),
	})
	steps = append(steps, resource.TestStep{
		ResourceName:  "iosxr_snmp_server_mib.test",
		ImportState:   true,
		ImportStateId: "Cisco-IOS-XR-um-snmp-server-cfg:/snmp-server-mibs",
	})
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps:                    steps,
	})
}

func testAccIosxrSNMPServerMIBConfig_minimum() string {
	config := `resource "iosxr_snmp_server_mib" "test" {` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxrSNMPServerMIBConfig_all() string {
	config := `resource "iosxr_snmp_server_mib" "test" {` + "\n"
	config += `	ifmib_ifalias_long = true` + "\n"
	config += `	ifindex_persist = true` + "\n"
	config += `}` + "\n"
	return config
}
