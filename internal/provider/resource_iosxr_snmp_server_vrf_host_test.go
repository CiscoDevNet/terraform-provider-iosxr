// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrSNMPServerVRFHost(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrSNMPServerVRFHostConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_snmp_server_vrf_host.test", "address", "11.11.11.11"),
					resource.TestCheckResourceAttr("iosxr_snmp_server_vrf_host.test", "unencrypted_strings.0.community_string", "COMMUNITY1"),
					resource.TestCheckResourceAttr("iosxr_snmp_server_vrf_host.test", "unencrypted_strings.0.version_v3_security_level", "auth"),
				),
			},
			{
				ResourceName:  "iosxr_snmp_server_vrf_host.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-snmp-server-cfg:/snmp-server/vrfs/vrf[vrf-name=VRF1]/hosts/host[address=11.11.11.11]",
			},
		},
	})
}

func testAccIosxrSNMPServerVRFHostConfig_minimum() string {
	return `
	resource "iosxr_snmp_server_vrf_host" "test" {
		vrf_name = "VRF1"
		address = "11.11.11.11"
	}
	`
}

func testAccIosxrSNMPServerVRFHostConfig_all() string {
	return `
	resource "iosxr_snmp_server_vrf_host" "test" {
		vrf_name = "VRF1"
		address = "11.11.11.11"
		unencrypted_strings = [{
			community_string = "COMMUNITY1"
			version_v3_security_level = "auth"
		}]
	}
	`
}
