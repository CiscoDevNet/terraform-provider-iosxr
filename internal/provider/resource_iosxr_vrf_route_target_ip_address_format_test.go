// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxrVRFRouteTargetIPAddressFormat(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxrVRFRouteTargetIPAddressFormatConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxr_vrf_route_target_ip_address_format.test", "vrf_name", "VRF1"),
					resource.TestCheckResourceAttr("iosxr_vrf_route_target_ip_address_format.test", "ip_address", "1.1.1.1"),
					resource.TestCheckResourceAttr("iosxr_vrf_route_target_ip_address_format.test", "index", "1"),
					resource.TestCheckResourceAttr("iosxr_vrf_route_target_ip_address_format.test", "stitching", "true"),
				),
			},
			{
				ResourceName:  "iosxr_vrf_route_target_ip_address_format.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XR-um-vrf-cfg:/vrfs/vrf[vrf-name=VRF1]/address-family/ipv4/unicast/Cisco-IOS-XR-um-router-bgp-cfg:import/Cisco-IOS-XR-um-router-bgp-cfg:route-target/Cisco-IOS-XR-um-router-bgp-cfg:ip-addresse-rts/Cisco-IOS-XR-um-router-bgp-cfg:ip-address-rt[ip-address=1.1.1.1][index=1][stitching=true]",
			},
		},
	})
}

func testAccIosxrVRFRouteTargetIPAddressFormatConfig_minimum() string {
	return `
	resource "iosxr_vrf_route_target_ip_address_format" "test" {
		vrf_name = "VRF1"
		address_family = "ipv4"
		sub_address_family = "unicast"
		direction = "import"
		ip_address = "1.1.1.1"
		index = 1
		stitching = true
	}
	`
}

func testAccIosxrVRFRouteTargetIPAddressFormatConfig_all() string {
	return `
	resource "iosxr_vrf_route_target_ip_address_format" "test" {
		vrf_name = "VRF1"
		address_family = "ipv4"
		sub_address_family = "unicast"
		direction = "import"
		ip_address = "1.1.1.1"
		index = 1
		stitching = true
	}
	`
}
